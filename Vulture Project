@name Vulture Project
@inputs [GunMain GunSecondary]:entity EGP:wirelink CamAng:vector [PelvisParent Spine1Parent Spine2Parent HeadParent Left_UpperArmParent Right_UpperArmParent Left_ForeArmParent Right_ForeArmParent Left_HandParent Right_HandParent Left_ThighParent Right_ThighParent Left_CalfParent Right_CalfParent Left_FootParent Right_FootParent Plasma_PistolParent Heavy_BolterParent]:entity
@persist MOVEW MOVES MOVEA MOVED DOWN Turning MoveVal MOVEMAX ShiftVal [RFoot LFoot LHand RHand LeftLegFly RightLegFly]:vector Step WalkRate Yaw [Ranger2 Ranger3]:ranger M2Val M2Val2 EditMode
@persist [Base Seat PodController]:entity DriverTargets:array Length1_Arm Length2_Arm Length1_Leg Length2_Leg On_Ground2 [LocalEyes PelvisAng]:angle HasJumpPack
@persist [HT CT Bones Animation BoneParents]:table [SpawnStatus CoreStatus]:string [HN CN I SpawnCounter] DriverStore:entity Pistolfirerate ZoomLevel
@persist [JiggleTable AnimationAngles]:table TP LaserCT SpaceForABit Flying MixFans FlyingStart RotorRPM DN2 FlyingStart2 FlyingStartVal MovementBlock Boosting Landed BoostData:table Nodes DistBelt CamParent:entity CamPos:vector CamDist CamFOV StartedBoosting StartPos:vector M2Val3 M2Val3Increase PodControllerW:wirelink
@model models/hunter/misc/sphere075x075.mdl
if(dupefinished()){reset()}
if(first()){
    
    propSpawnUndo(0)
    Base=entity()
    Base:propFreeze(1)
    Base:propDraw(0)
    Base:setMass(1000)
    Base:propPhysicalMaterial("canister")
    noCollideAll(Base,0)
    Base:makeSpherical(6+6/2)
    Base:propInertia(vec(100))
    
    Seat = seatSpawn("models/nova/airboat_seat.mdl",1)
    Seat:setAlpha(0)
    rangerFilter(array(Seat,Base))
    rangerPersist(1)
    
    DriverTargets = array(owner())
    
    ShowBones=0
    ShowBonesAll=0
    EditMode=0
    Model = 1
    
    Length1_Arm=17
    Length2_Arm=16
    Length1_Leg=19
    Length2_Leg=20
    
    S=I=1, HN++, HT[HN,array] = array(I, noentity(), noentity(), 0, vec(0, 0, 0), ang(0, 0, 0), ShowBones*ShowBonesAll, "models/sprops/geometry/sphere_3.mdl"),Bones["Root",number]=I
    I++, HN++, HT[HN,array] = array(I, Bones["Root",number], Seat, 0, vec(0, 0, 0), ang(0, 0, 0), ShowBones*ShowBonesAll, "models/sprops/geometry/sphere_3.mdl"),Bones["CamParent",number]=I
    I++, HN++, HT[HN,array] = array(I, Bones["Root",number], noentity(), 0, vec(0, 0, 0), ang(0, 0, 0), ShowBones, "models/sprops/geometry/sphere_3.mdl"),Bones["Pelvis",number]=I
    I++, HN++, HT[HN,array] = array(I, Bones["Pelvis",number], noentity(), 0, vec(0, 0, 8), ang(0, 0, 0), ShowBones, "models/sprops/geometry/sphere_3.mdl"),Bones["Spine1",number]=I
    I++, HN++, HT[HN,array] = array(I, Bones["Spine1",number], noentity(), 0, vec(0, 0, 10), ang(0, 0, 0), ShowBones, "models/sprops/geometry/sphere_3.mdl"),Bones["Spine2",number]=I
    I++, HN++, HT[HN,array] = array(I, Bones["Spine2",number], noentity(), 0, vec(0, 0, 0), ang(60, 0, 0), ShowBones, "models/sprops/geometry/sphere_3.mdl"),Bones["Spine3",number]=I
    I++, HN++, HT[HN,array] = array(I, Bones["Spine2",number], noentity(), 0, vec(1.5, 0, 16), ang(0, 0, 0), ShowBones, "models/sprops/geometry/sphere_3.mdl"),Bones["Head",number]=I
    
    I++, HN++, HT[HN,array] = array(I, Bones["Spine2",number], noentity(), 0, vec(-1, 12, 9), ang(0, 0, 0), ShowBones, "models/sprops/geometry/sphere_3.mdl"),Bones["Left_Shoulder",number]=I
    I++, HN++, HT[HN,array] = array(I, Bones["Spine2",number], noentity(), 0, vec(-1, -12, 9), ang(0, 0, 0), ShowBones, "models/sprops/geometry/sphere_3.mdl"),Bones["Right_Shoulder",number]=I
    
    I++, HN++, HT[HN,array] = array(I, Bones["Spine2",number], noentity(), 0, vec(-1, 12, 9), ang(180, 0, -90), ShowBones, "models/sprops/geometry/sphere_3.mdl"),Bones["Left_UpperArm",number]=I
    I++, HN++, HT[HN,array] = array(I, Bones["Spine2",number], noentity(), 0, vec(-1, -12, 9), ang(180, 0, 90), ShowBones, "models/sprops/geometry/sphere_3.mdl"),Bones["Right_UpperArm",number]=I
    
    I++, HN++, HT[HN,array] = array(I, Bones["Left_UpperArm",number], noentity(), 0, vec(0, 0, Length1_Arm), ang(0, 0, 0), ShowBones, "models/sprops/geometry/sphere_3.mdl"),Bones["Left_ForeArm",number]=I
    I++, HN++, HT[HN,array] = array(I, Bones["Right_UpperArm",number], noentity(), 0, vec(0, 0, Length1_Arm), ang(0, 0, 0), ShowBones, "models/sprops/geometry/sphere_3.mdl"),Bones["Right_ForeArm",number]=I
    
    I++, HN++, HT[HN,array] = array(I, Bones["Left_ForeArm",number], noentity(), 0, vec(0, 0, Length2_Arm), ang(0, 0, 0), ShowBones, "models/sprops/geometry/sphere_3.mdl"),Bones["Left_Hand",number]=I
    I++, HN++, HT[HN,array] = array(I, Bones["Right_ForeArm",number], noentity(), 0, vec(0, 0, Length2_Arm), ang(0, 0, 0), ShowBones, "models/sprops/geometry/sphere_3.mdl"),Bones["Right_Hand",number]=I
    
    I++, HN++, HT[HN,array] = array(I, Bones["Left_ForeArm",number], noentity(), 0, vec(0, 0, Length2_Arm), ang(0, 0, 0), ShowBones, "models/sprops/geometry/sphere_3.mdl"),Bones["Left_Hand_Real",number]=I
    I++, HN++, HT[HN,array] = array(I, Bones["Right_ForeArm",number], noentity(), 0, vec(0, 0, Length2_Arm), ang(0, 0, 0), ShowBones, "models/sprops/geometry/sphere_3.mdl"),Bones["Right_Hand_Real",number]=I
    
    
    I++, HN++, HT[HN,array] = array(I, Bones["Pelvis",number], noentity(), 0, vec(1, 6.5, -0.5), ang(0, 0, 0), ShowBones, "models/sprops/geometry/sphere_3.mdl"),Bones["Left_LegHelper",number]=I
    I++, HN++, HT[HN,array] = array(I, Bones["Pelvis",number], noentity(), 0, vec(1, -6.5, -0.5), ang(0, 0, 0), ShowBones, "models/sprops/geometry/sphere_3.mdl"),Bones["Right_LegHelper",number]=I
    
    I++, HN++, HT[HN,array] = array(I, Bones["Pelvis",number], noentity(), 0, vec(1, 6.5, -0.5), ang(0, 0, 180), ShowBones, "models/sprops/geometry/sphere_3.mdl"),Bones["Left_Thigh",number]=I
    I++, HN++, HT[HN,array] = array(I, Bones["Pelvis",number], noentity(), 0, vec(1, -6.5, -0.5), ang(0, 0, 180), ShowBones, "models/sprops/geometry/sphere_3.mdl"),Bones["Right_Thigh",number]=I
    
    I++, HN++, HT[HN,array] = array(I, Bones["Left_Thigh",number], noentity(), 0, vec(0, 0, Length1_Leg), ang(0, 0, 0), ShowBones, "models/sprops/geometry/sphere_3.mdl"),Bones["Left_Calf",number]=I
    I++, HN++, HT[HN,array] = array(I, Bones["Right_Thigh",number], noentity(), 0, vec(0, 0, Length1_Leg), ang(0, 0, 0), ShowBones, "models/sprops/geometry/sphere_3.mdl"),Bones["Right_Calf",number]=I
    
    I++, HN++, HT[HN,array] = array(I, Bones["Left_Calf",number], noentity(), 0, vec(0, 0, Length2_Leg), ang(0, 0, 180), ShowBones, "models/sprops/geometry/sphere_3.mdl"),Bones["Left_Foot",number]=I
    I++, HN++, HT[HN,array] = array(I, Bones["Right_Calf",number], noentity(), 0, vec(0, 0, Length2_Leg), ang(0, 0, 180), ShowBones, "models/sprops/geometry/sphere_3.mdl"),Bones["Right_Foot",number]=I
    
    I++, HN++, HT[HN,array] = array(I, Bones["Spine2",number], noentity(), 0, vec(-4,8,4), ang(0, 0, 0), ShowBones, "models/sprops/geometry/sphere_3.mdl"),Bones["Left_Wing_Joint_1",number]=I
    I++, HN++, HT[HN,array] = array(I, Bones["Spine2",number], noentity(), 0, vec(-4,-8,4), ang(0, 0, 0), ShowBones, "models/sprops/geometry/sphere_3.mdl"),Bones["Right_Wing_Joint_1",number]=I
    I++, HN++, HT[HN,array] = array(I, Bones["Left_Wing_Joint_1",number], noentity(), 0, vec(0,45,0), ang(0, 0, 0), ShowBones, "models/sprops/geometry/sphere_3.mdl"),Bones["Left_Wing_Joint_2",number]=I
    I++, HN++, HT[HN,array] = array(I, Bones["Right_Wing_Joint_1",number], noentity(), 0, vec(0,-45,0), ang(0, 0, 0), ShowBones, "models/sprops/geometry/sphere_3.mdl"),Bones["Right_Wing_Joint_2",number]=I
    I++, HN++, HT[HN,array] = array(I, Bones["Left_Wing_Joint_2",number], noentity(), 0, vec(0,45,0), ang(0, 0, 0), ShowBones, "models/sprops/geometry/sphere_3.mdl"),Bones["Left_Wing_Joint_3",number]=I
    I++, HN++, HT[HN,array] = array(I, Bones["Right_Wing_Joint_2",number], noentity(), 0, vec(0,-45,0), ang(0, 0, 0), ShowBones, "models/sprops/geometry/sphere_3.mdl"),Bones["Right_Wing_Joint_3",number]=I
    
    I++, HN++, HT[HN,array] = array(I, Bones["Left_Wing_Joint_3",number], noentity(), 0, vec(0,45,-8), ang(0, 0, 0), ShowBones, "models/sprops/geometry/sphere_3.mdl"),Bones["Left_Feather_1",number]=I
    I++, HN++, HT[HN,array] = array(I, Bones["Right_Wing_Joint_3",number], noentity(), 0, vec(0,-45,-8), ang(0, 0, 0), ShowBones, "models/sprops/geometry/sphere_3.mdl"),Bones["Right_Feather_1",number]=I
    I++, HN++, HT[HN,array] = array(I, Bones["Left_Wing_Joint_3",number], noentity(), 0, vec(0,40,-16), ang(0,0,0), ShowBones, "models/sprops/geometry/sphere_3.mdl"),Bones["Left_Feather_2",number]=I
    I++, HN++, HT[HN,array] = array(I, Bones["Right_Wing_Joint_3",number], noentity(), 0, vec(0,-40,-16), ang(0,0,0), ShowBones, "models/sprops/geometry/sphere_3.mdl"),Bones["Right_Feather_2",number]=I
    I++, HN++, HT[HN,array] = array(I, Bones["Left_Wing_Joint_3",number], noentity(), 0, vec(0,35,-24), ang(0, 0, 0), ShowBones, "models/sprops/geometry/sphere_3.mdl"),Bones["Left_Feather_3",number]=I
    I++, HN++, HT[HN,array] = array(I, Bones["Right_Wing_Joint_3",number], noentity(), 0, vec(0,-35,-24), ang(0, 0, 0), ShowBones, "models/sprops/geometry/sphere_3.mdl"),Bones["Right_Feather_3",number]=I
    I++, HN++, HT[HN,array] = array(I, Bones["Left_Wing_Joint_3",number], noentity(), 0, vec(0,30,-32), ang(0, 0, 0), ShowBones, "models/sprops/geometry/sphere_3.mdl"),Bones["Left_Feather_4",number]=I
    I++, HN++, HT[HN,array] = array(I, Bones["Right_Wing_Joint_3",number], noentity(), 0, vec(0,-30,-32), ang(0, 0, 0), ShowBones, "models/sprops/geometry/sphere_3.mdl"),Bones["Right_Feather_4",number]=I
    I++, HN++, HT[HN,array] = array(I, Bones["Left_Wing_Joint_3",number], noentity(), 0, vec(0,25,-40), ang(0, 0, 0), ShowBones, "models/sprops/geometry/sphere_3.mdl"),Bones["Left_Feather_5",number]=I
    I++, HN++, HT[HN,array] = array(I, Bones["Right_Wing_Joint_3",number], noentity(), 0, vec(0,-25,-40), ang(0, 0, 0), ShowBones, "models/sprops/geometry/sphere_3.mdl"),Bones["Right_Feather_5",number]=I
    
    I++, HN++, HT[HN,array] = array(I, Bones["Spine2",number], noentity(), 0, vec(-9,5,6), ang(-90, 0, 0), ShowBones, "models/sprops/geometry/sphere_3.mdl"),Bones["Left_Arm_Joint_Helper",number]=I
    I++, HN++, HT[HN,array] = array(I, Bones["Spine2",number], noentity(), 0, vec(-9,-5,6), ang(-90, 0, 0), ShowBones, "models/sprops/geometry/sphere_3.mdl"),Bones["Right_Arm_Joint_Helper",number]=I
    I++, HN++, HT[HN,array] = array(I, Bones["Spine2",number], noentity(), 0, vec(-9,5,6), ang(-90, 0, 0), ShowBones, "models/sprops/geometry/sphere_3.mdl"),Bones["Left_Arm_Joint_1",number]=I
    I++, HN++, HT[HN,array] = array(I, Bones["Spine2",number], noentity(), 0, vec(-9,-5,6), ang(-90, 0, 0), ShowBones, "models/sprops/geometry/sphere_3.mdl"),Bones["Right_Arm_Joint_1",number]=I
    
    I++, HN++, HT[HN,array] = array(I, Bones["Left_Arm_Joint_1",number], noentity(), 0, vec(0,0,35/2), ang(0, 0, 0), ShowBones, "models/sprops/geometry/sphere_3.mdl"),Bones["Left_Arm_Joint_2",number]=I
    I++, HN++, HT[HN,array] = array(I, Bones["Right_Arm_Joint_1",number], noentity(), 0, vec(0,0,35/2), ang(0, 0, 0), ShowBones, "models/sprops/geometry/sphere_3.mdl"),Bones["Right_Arm_Joint_2",number]=I
    I++, HN++, HT[HN,array] = array(I, Bones["Left_Arm_Joint_2",number], noentity(), 0, vec(0,0,60/2), ang(0, 0, 0), ShowBones, "models/sprops/geometry/sphere_3.mdl"),Bones["Left_Arm_Joint_3",number]=I
    I++, HN++, HT[HN,array] = array(I, Bones["Right_Arm_Joint_2",number], noentity(), 0, vec(0,0,60/2), ang(0, 0, 0), ShowBones, "models/sprops/geometry/sphere_3.mdl"),Bones["Right_Arm_Joint_3",number]=I
    
    I++, HN++, HT[HN,array] = array(I, Bones["Left_Arm_Joint_3",number], noentity(), 0, vec(4,20+25,-20), ang(0, 0, 0), ShowBones, "models/sprops/geometry/sphere_3.mdl"),Bones["Left_Arm_Joint_4",number]=I
    I++, HN++, HT[HN,array] = array(I, Bones["Right_Arm_Joint_3",number], noentity(), 0, vec(4,-20-25,-20), ang(0, 0, 0), ShowBones, "models/sprops/geometry/sphere_3.mdl"),Bones["Right_Arm_Joint_4",number]=I
    
    I++, HN++, HT[HN,array] = array(I, Bones["Left_Arm_Joint_4",number], noentity(), 0, vec(0,0,0), ang(0, 0, 0), ShowBones, "models/sprops/geometry/sphere_3.mdl"),Bones["Left_Arm_Joint_5",number]=I
    I++, HN++, HT[HN,array] = array(I, Bones["Right_Arm_Joint_4",number], noentity(), 0, vec(0,0,0), ang(0, 0, 0), ShowBones, "models/sprops/geometry/sphere_3.mdl"),Bones["Right_Arm_Joint_5",number]=I
    
    
    I++, HN++, HT[HN,array] = array(I, Bones["Left_Wing_Joint_2",number], noentity(), 0, vec(0,0,0), ang(0, 0, 0), ShowBones, "models/sprops/geometry/sphere_3.mdl"),Bones["Left_Arm_Joint_Helper2",number]=I
    I++, HN++, HT[HN,array] = array(I, Bones["Right_Wing_Joint_2",number], noentity(), 0, vec(0,0,0), ang(0, 0, 0), ShowBones, "models/sprops/geometry/sphere_3.mdl"),Bones["Right_Arm_Joint_Helper2",number]=I
    
    local Parent = Bones["Left_Hand_Real",number]
    I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0, 0, 0), ang(0, 0, 0), vec(0.1,0.1,1), "models/props_c17/oildrum001.mdl", "models/debug/debugwhite", vec4(0, 255, 255, 255), 1), Bones["Left_Laser",number] = I
    
    local Parent = Bones["Right_Hand_Real",number]
    I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0, 0, 0), ang(0, 0, 0), vec(0.1,0.1,1), "models/props_c17/oildrum001.mdl", "models/debug/debugwhite", vec4(0, 255, 255, 255), 1), Bones["Right_Laser",number] = I
    
    
    if(Model){
        
        local Size = 1.5
        local Parent = Bones["Left_Foot",number]
        
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(2.8229, -0.0005, -0.9467)*Size, ang(95, 0, 0), vec(0.2275, 0.312, 0.4225)*Size, "models/sprops/misc/fittings/cred_12_9_tall.mdl", "", vec4(75, 75, 75, 255), 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(-1.527, -0.0005, -1.447)*Size, ang(0, 90, 90), vec(0.4724, 0.3736, 2.679)*Size, "models/sprops/geometry/hhex_12.mdl", "", vec4(75, 75, 75, 255), 0)
    	    CN++, CT[CN,table] = table(I, 1, vec(0, 0, 1.5)*Size, vec(0, 0, 1))
    
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0, 0, -0.8)*Size, ang(0, 0, 0), vec(0.36, 0.36, 0.21)*Size, "models/sprops/misc/fittings/cred_12_9_tall.mdl", "", vec4(75, 75, 75, 255), 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0, 0, 0)*Size, ang(0, 0, 0), vec(0.275, 1.32, 0.275)*Size, "models/sprops/geometry/fhex_12.mdl", "", vec4(75, 75, 75, 255), 0)
    	
        
        local Parent = Bones["Right_Foot",number]
        
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(2.8229, -0.0005, -0.9467)*Size, ang(95, 0, 0), vec(0.2275, 0.312, 0.4225)*Size, "models/sprops/misc/fittings/cred_12_9_tall.mdl", "", vec4(75, 75, 75, 255), 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(-1.527, -0.0005, -1.447)*Size, ang(0, 90, 90), vec(0.4724, 0.3736, 2.679)*Size, "models/sprops/geometry/hhex_12.mdl", "", vec4(75, 75, 75, 255), 0)
    	    CN++, CT[CN,table] = table(I, 1, vec(0, 0, 1.5)*Size, vec(0, 0, 1))
    
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0, 0, -0.8)*Size, ang(0, 0, 0), vec(0.36, 0.36, 0.21)*Size, "models/sprops/misc/fittings/cred_12_9_tall.mdl", "", vec4(75, 75, 75, 255), 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0, 0, 0)*Size, ang(0, 0, 0), vec(0.275, 1.32, 0.275)*Size, "models/sprops/geometry/fhex_12.mdl", "", vec4(75, 75, 75, 255), 0)
    	
        
        local Parent = Bones["Left_Calf",number]
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(-1.5542, 0, 8.8988), ang(8.6, 0, 0), vec(0.3, 0.2, 1.6), "models/hunter/blocks/cube025x025x025.mdl", "sprops/sprops_grid_12x12", vec4(75, 75, 75, 255), 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0.2958, 0, 8.9977), ang(-1.3, 0, 0), vec(0.3, 0.15, 1.56), "models/hunter/blocks/cube025x025x025.mdl", "sprops/sprops_grid_12x12", vec4(75, 75, 75, 255), 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0, 0, 16.4), ang(0, 0, 0), vec(0.06, 0.06, 0.08), "models/hunter/tubes/tube1x1x1.mdl", "sprops/sprops_grid_12x12", vec4(75, 75, 75, 255), 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0, 0, 9), ang(0, 0, 0), vec(0.3, 0.3, 1.6), "models/hunter/blocks/cube025x025x025.mdl", "sprops/sprops_grid_12x12", vec4(75, 75, 75, 255), 0)
        
        
        local Parent = Bones["Right_Calf",number]
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(-1.5542, 0, 8.8988), ang(8.6, 0, 0), vec(0.3, 0.2, 1.6), "models/hunter/blocks/cube025x025x025.mdl", "sprops/sprops_grid_12x12", vec4(75, 75, 75, 255), 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0.2958, 0, 8.9977), ang(-1.3, 0, 0), vec(0.3, 0.15, 1.56), "models/hunter/blocks/cube025x025x025.mdl", "sprops/sprops_grid_12x12", vec4(75, 75, 75, 255), 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0, 0, 16.4), ang(0, 0, 0), vec(0.06, 0.06, 0.08), "models/hunter/tubes/tube1x1x1.mdl", "sprops/sprops_grid_12x12", vec4(75, 75, 75, 255), 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0, 0, 9), ang(0, 0, 0), vec(0.3, 0.3, 1.6), "models/hunter/blocks/cube025x025x025.mdl", "sprops/sprops_grid_12x12", vec4(75, 75, 75, 255), 0)
        
        
        local Parent = Bones["Left_Thigh",number]
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(-0.8367, 0, 8.4548), ang(-1.6, 0, 0), vec(0.6, 0.3, 1.8), "models/hunter/blocks/cube025x025x025.mdl", "sprops/sprops_grid_12x12", vec4(75, 75, 75, 255), 0)
    	
        local Parent = Bones["Right_Thigh",number]
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(-0.8367, 0, 8.4548), ang(-1.6, 0, 0), vec(0.6, 0.3, 1.8), "models/hunter/blocks/cube025x025x025.mdl", "sprops/sprops_grid_12x12", vec4(75, 75, 75, 255), 0)
    	
    
        local Parent = Bones["Pelvis",number]
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0, 0, 3.5), ang(0, 0, 0), vec(0.8, 0.7, 0.6), "models/hunter/blocks/cube025x025x025.mdl", "sprops/sprops_grid_12x12", vec4(75, 75, 75, 255), 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0, 0, 0), ang(0, 0, 0), vec(0.9, 0.8, 0.4), "models/hunter/blocks/cube025x025x025.mdl", "sprops/sprops_grid_12x12", vec4(75, 75, 75, 255), 0)
        
        
        local Parent = Bones["Spine1",number]
        
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(-0.7916, 0, 3.4845), ang(-8.3, 0, 0), vec(0.8, 0.8, 1.1), "models/hunter/blocks/cube025x025x025.mdl", "sprops/sprops_grid_12x12", vec4(75, 75, 75, 255), 0)
    	
        
        local Parent = Bones["Spine2",number]
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(-1.8, -5.3, 5.4), ang(0, 0, 45), vec(0.7, 0.7, 1.1), "models/hunter/blocks/cube025x025x025.mdl", "sprops/sprops_grid_12x12", vec4(75, 75, 75, 255), 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(-6.9, 0, 4), ang(-66.244, 0, 0), vec(0.15, 0.13, 0.15), "models/hunter/triangles/trapezium3x3x1c.mdl", "sprops/sprops_grid_12x12", vec4(75, 75, 75, 255), 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(-1.7, 0, 4.6), ang(0, 0, 0), vec(0.9, 1, 1.3), "models/hunter/blocks/cube025x025x025.mdl", "sprops/sprops_grid_12x12", vec4(75, 75, 75, 255), 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(-0.5, 0, 10.2), ang(0, 0, 0), vec(0.99, 1.265, 0.44), "models/hunter/blocks/cube025x025x025.mdl", "sprops/sprops_grid_12x12", vec4(75, 75, 75, 255), 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(-1.8, 5.3, 5.4), ang(0, 0, -45), vec(0.7, 0.7, 1.1), "models/hunter/blocks/cube025x025x025.mdl", "sprops/sprops_grid_12x12", vec4(75, 75, 75, 255), 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(1.1494, 0, 14.7861), ang(15.8026, 0, 0), vec(0.1125, 0.1125, 0.1), "models/hunter/misc/squarecap2x2x2.mdl", "sprops/sprops_grid_12x12", vec4(75, 75, 75, 255), 0)
        
        
        local Parent = Bones["Head",number]
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(-1.5771, -3.874, 6.8687), ang(28.7, 10.6, 0), vec(0.98, 0.21, 0.56), "models/hunter/blocks/cube025x025x025.mdl", "sprops/sprops_grid_12x12", vec4(75, 75, 75, 255), 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(-1.5771, 3.874, 6.8687), ang(28.7, -10.6, 0), vec(0.98, 0.21, 0.56), "models/hunter/blocks/cube025x025x025.mdl", "sprops/sprops_grid_12x12", vec4(75, 75, 75, 255), 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0, 0, 3.3), ang(8, 0, 0), vec(0.77, 0.63, 0.7), "models/hunter/blocks/cube025x025x025.mdl", "sprops/sprops_grid_12x12", vec4(75, 75, 75, 255), 0)
    	
    
        local Parent = Bones["Left_UpperArm",number]
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0, 0, 10.1401), ang(0, 0, 0), vec(0.4, 0.25, 1.2), "models/hunter/blocks/cube025x025x025.mdl", "sprops/sprops_grid_12x12", vec4(75, 75, 75, 255), 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0, 0, -2), ang(0, 0, 0), vec(0.6, 0.4, 0.9), "models/hunter/blocks/cube025x025x025.mdl", "sprops/sprops_grid_12x12", vec4(75, 75, 75, 255), 0)
        
        
        local Parent = Bones["Right_UpperArm",number]
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0, 0, 10.1401), ang(0, 0, 0), vec(0.4, 0.25, 1.2), "models/hunter/blocks/cube025x025x025.mdl", "sprops/sprops_grid_12x12", vec4(75, 75, 75, 255), 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0, 0, -2), ang(0, 0, 0), vec(0.6, 0.4, 0.9), "models/hunter/blocks/cube025x025x025.mdl", "sprops/sprops_grid_12x12", vec4(75, 75, 75, 255), 0)
        
        
        local Parent = Bones["Left_ForeArm",number]
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0, 0, 7.14), ang(0, 0, 0), vec(0.3, 0.2, 1.5), "models/hunter/blocks/cube025x025x025.mdl", "sprops/sprops_grid_12x12", vec4(75, 75, 75, 255), 0)
        
        
        local Parent = Bones["Right_ForeArm",number]
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0, 0, 7.14), ang(0, 0, 0), vec(0.3, 0.2, 1.5), "models/hunter/blocks/cube025x025x025.mdl", "sprops/sprops_grid_12x12", vec4(75, 75, 75, 255), 0)
        
        
        local Parent = Bones["Left_Wing_Joint_1",number]
        
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0, 22.1534, -1.0338), ang(0, 0, 81.6557), vec(1.38, 3.45, 3.45), "models/sprops/misc/fittings/cred_6_3_tall.mdl", "", vec4(50,50,50,255), 0, 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(-5.4497, -4.7491, -13.3733), ang(40.2993, -100.9294, 154.2839), vec(4.1, 0.7, 0.9), "models/sprops/geometry/qhex_24.mdl", "", vec4(50,50,50,255), 0, 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0, 3.6892, -11.5452), ang(0, 0, 130.5294), vec(0.6, 1.6, 2.6), "models/sprops/misc/fittings/cred_9_6_tall.mdl", "", vec4(75,75,75,255), 0, 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0.0002, 16.9623, -11.8659), ang(22.0122, -90, 0), vec(1.5, 0.6, 1.3), "models/sprops/misc/fittings/bend_long_45_9.mdl", "", vec4(75,75,75,255), 0, 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(-4.9976, 2.6577, -19.8251), ang(46.993, -97.6561, 166.394), vec(4.2, 0.7, 1), "models/sprops/geometry/qhex_24.mdl", "", vec4(50,50,50,255), 0, 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(1.0144, -6.9729, -14.182), ang(-39.005, 88.8078, -5.8218), vec(2, 1, 1), "models/sprops/geometry/hhex_18.mdl", "", vec4(50,50,50,255), 0, 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(-4.5911, 10.7467, -21.0473), ang(52.4729, -97.1537, 178.5036), vec(3.5, 0.7, 0.8), "models/sprops/geometry/qhex_24.mdl", "", vec4(50,50,50,255), 0, 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0.001, -4.085, -11.4186), ang(0, -90, 0), vec(1.5, 1.2, 1.4), "models/sprops/geometry/qhex_42.mdl", "", vec4(75,75,75,255), 0, 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(-5.0791, 23.3555, -2.7959), ang(64.9563, -173.3548, -82.3695), vec(1, 1, 2.2), "models/sprops/geometry/qhex_30.mdl", "", vec4(50,50,50,255), 0, 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0.001, -5.885, -16.019), ang(-10.4, -90, 0), vec(1.5, 1.1, 2), "models/sprops/geometry/qhex_42.mdl", "", vec4(75,75,75,255), 0, 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(2.0068, 0.4678, -15.3202), ang(-39.005, 88.8078, -0.4639), vec(2, 1, 1), "models/sprops/geometry/hhex_18.mdl", "", vec4(50,50,50,255), 0, 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(1.9502, 18.6055, -2.1553), ang(6.1201, 85.7381, -3.618), vec(2.4, 1, 1), "models/sprops/geometry/hhex_18.mdl", "", vec4(50,50,50,255), 0, 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0.0002, 33.3833, -1.3492), ang(0, 0, 78.7917), vec(1.725, 3.45, 3.45), "models/sprops/misc/fittings/cred_6_3_tall.mdl", "", vec4(50,50,50,255), 0, 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0, 10.621, -2.2), ang(0, 0, 84.9), vec(1.2075, 3.45, 3.45), "models/sprops/misc/fittings/cred_6_3_tall.mdl", "", vec4(50,50,50,255), 0, 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(-5.115, -4.8484, -18.2374), ang(44.2172, -98.7295, 162.7549), vec(4.8, 0.7, 1), "models/sprops/geometry/qhex_24.mdl", "", vec4(50,50,50,255), 0, 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0, 11.662, -16.066), ang(42.912, -90, 0), vec(1.2, 0.55, 1.6), "models/sprops/misc/fittings/bend_long_45_9.mdl", "", vec4(75,75,75,255), 0, 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(2.3535, 8.3766, -16.6701), ang(-39.005, 88.8078, 5.5206), vec(1.9, 1, 1), "models/sprops/geometry/hhex_18.mdl", "", vec4(50,50,50,255), 0, 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(-5.27, -3.425, -8.6162), ang(38.8474, -105.724, 143.38), vec(3.1, 0.7, 0.7), "models/sprops/geometry/qhex_24.mdl", "", vec4(50,50,50,255), 0, 0)
    	
    
        local Parent = Bones["Right_Wing_Joint_1",number]
        
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0, -22.153, -1.0338), ang(0, 0, -81.656), vec(1.38, 3.45, 3.45), "models/sprops/misc/fittings/cred_6_3_tall.mdl", "", vec4(50,50,50,255), 0, 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0.0002, -16.962, -11.8659), ang(22.0122, 90, 0), vec(1.5, 0.6, 1.3), "models/sprops/misc/fittings/bend_long_45_9.mdl", "", vec4(75,75,75,255), 0, 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(2.0068, -0.468, -15.3202), ang(-39.005, -88.808, 0.464), vec(2, 1, 1), "models/sprops/geometry/hhex_18.mdl", "", vec4(50,50,50,255), 0, 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(-4.5911, -10.747, -21.0473), ang(52.4729, 97.154, -178.504), vec(3.5, 0.7, 0.8), "models/sprops/geometry/qhex_24.mdl", "", vec4(50,50,50,255), 0, 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(-5.115, 4.848, -18.2374), ang(44.2172, 98.729, -162.755), vec(4.8, 0.7, 1), "models/sprops/geometry/qhex_24.mdl", "", vec4(50,50,50,255), 0, 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0, -3.689, -11.5452), ang(0, 0, -130.529), vec(0.6, 1.6, 2.6), "models/sprops/misc/fittings/cred_9_6_tall.mdl", "", vec4(75,75,75,255), 0, 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0, -10.621, -2.2), ang(0, 0, -84.9), vec(1.2075, 3.45, 3.45), "models/sprops/misc/fittings/cred_6_3_tall.mdl", "", vec4(50,50,50,255), 0, 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0.001, 4.085, -11.4186), ang(0, 90, 0), vec(1.5, 1.2, 1.4), "models/sprops/geometry/qhex_42.mdl", "", vec4(75,75,75,255), 0, 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(1.9502, -18.606, -2.1553), ang(6.1201, -85.738, 3.618), vec(2.4, 1, 1), "models/sprops/geometry/hhex_18.mdl", "", vec4(50,50,50,255), 0, 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(-5.4497, 4.749, -13.3733), ang(40.2993, 100.929, -154.284), vec(4.1, 0.7, 0.9), "models/sprops/geometry/qhex_24.mdl", "", vec4(50,50,50,255), 0, 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0, -11.662, -16.066), ang(42.912, 90, 0), vec(1.2, 0.55, 1.6), "models/sprops/misc/fittings/bend_long_45_9.mdl", "", vec4(75,75,75,255), 0, 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(1.0144, 6.973, -14.182), ang(-39.005, -88.808, 5.822), vec(2, 1, 1), "models/sprops/geometry/hhex_18.mdl", "", vec4(50,50,50,255), 0, 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0.0002, -33.383, -1.3492), ang(0, 0, -78.792), vec(1.725, 3.45, 3.45), "models/sprops/misc/fittings/cred_6_3_tall.mdl", "", vec4(50,50,50,255), 0, 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(-4.9976, -2.658, -19.8251), ang(46.993, 97.656, -166.394), vec(4.2, 0.7, 1), "models/sprops/geometry/qhex_24.mdl", "", vec4(50,50,50,255), 0, 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(2.3535, -8.377, -16.6701), ang(-39.005, -88.808, -5.521), vec(1.9, 1, 1), "models/sprops/geometry/hhex_18.mdl", "", vec4(50,50,50,255), 0, 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(-5.27, 3.4248, -8.6162), ang(38.8474, 105.724, -143.3804), vec(3.1, 0.7, 0.7), "models/sprops/geometry/qhex_24.mdl", "", vec4(50,50,50,255), 0, 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0.001, 5.885, -16.019), ang(-10.4, 90, 0), vec(1.5, 1.1, 2), "models/sprops/geometry/qhex_42.mdl", "", vec4(75,75,75,255), 0, 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(-5.0791, -23.356, -2.7959), ang(64.956, 173.355, 82.369), vec(1, 1, 2.2), "models/sprops/geometry/qhex_30.mdl", "", vec4(50,50,50,255), 0, 0)
    	
        
        local Parent = Bones["Left_Wing_Joint_2",number]
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0.002, 23.074, -2.582), ang(0, 0, -86.422), vec(0.8, 2.2, 4.2), "models/sprops/misc/fittings/cred_9_6_tall.mdl", "", vec4(50,50,50,255), 0, 0)
    	
        
        local Parent = Bones["Right_Wing_Joint_2",number]
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0.002, -23.0737, -2.582), ang(0, 0, 86.4217), vec(0.8, 2.2, 4.2), "models/sprops/misc/fittings/cred_9_6_tall.mdl", "", vec4(50,50,50,255), 0, 0)
    	
        
        local Parent = Bones["Left_Wing_Joint_3",number]
        
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0.0098, 22.28, 0.8447), ang(-4.2976, -90, 0), vec(1.485, 0.66, 0.9075), "models/sprops/misc/fittings/bend_long_45_9.mdl", "", vec4(50,50,50,255), 0, 0)
    	    CN++, CT[CN,table] = table(I, 1, vec(-22.9626, 0, 0), vec(0.8521, 0, -0.5234))
    
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0, 25.765, -22.712), ang(104.6, 90, 0), vec(1.32, 0.66, 2.475), "models/sprops/misc/fittings/bend_long_45_9.mdl", "", vec4(75,75,75,255), 0, 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0.0029, 30.802, -22.4683), ang(58.7926, -90, 0), vec(1.485, 0.66, 1.0725), "models/sprops/misc/fittings/bend_long_45_9.mdl", "", vec4(75,75,75,255), 0, 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0, 9.865, -16.112), ang(90, 90, 0), vec(1.155, 0.4125, 1.5675), "models/sprops/misc/fittings/bend_long_45_9.mdl", "", vec4(75,75,75,255), 0, 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0, 15.165, -19.012), ang(100.3, 90, 0), vec(1.2375, 0.495, 2.0625), "models/sprops/misc/fittings/bend_long_45_9.mdl", "", vec4(75,75,75,255), 0, 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0.001, 34.966, -6.5659), ang(0, 90, 0), vec(4.1, 1.5, 2.8), "models/sprops/misc/fittings/bend_short_90_3.mdl", "", vec4(75,75,75,255), 0, 0)
    	
        local Parent = Bones["Right_Wing_Joint_3",number]
        
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0.0098, -22.2798, 0.8447), ang(-4.2976, 90, 0), vec(1.485, 0.66, 0.9075), "models/sprops/misc/fittings/bend_long_45_9.mdl", "", vec4(50,50,50,255), 0, 0)
    	    CN++, CT[CN,table] = table(I, 1, vec(-22.9626, 0, 0), vec(0.8521, 0, -0.5234))
    
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0.0029, -30.8022, -22.4683), ang(58.7926, 90, 0), vec(1.485, 0.66, 1.0725), "models/sprops/misc/fittings/bend_long_45_9.mdl", "", vec4(75,75,75,255), 0, 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0, -15.165, -19.012), ang(100.3, -90, 0), vec(1.2375, 0.495, 2.0625), "models/sprops/misc/fittings/bend_long_45_9.mdl", "", vec4(75,75,75,255), 0, 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0, -25.765, -22.712), ang(104.6, -90, 0), vec(1.32, 0.66, 2.475), "models/sprops/misc/fittings/bend_long_45_9.mdl", "", vec4(75,75,75,255), 0, 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0, -9.865, -16.112), ang(90, -90, 0), vec(1.155, 0.4125, 1.5675), "models/sprops/misc/fittings/bend_long_45_9.mdl", "", vec4(75,75,75,255), 0, 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0.001, -34.9663, -6.5659), ang(0, -90, 0), vec(4.1, 1.5, 2.8), "models/sprops/misc/fittings/bend_short_90_3.mdl", "", vec4(75,75,75,255), 0, 0)
    	
        
        local Parent = Bones["Left_Feather_1",number]
        
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0, 7.713, 0), ang(0, 90, -180), vec(3.9, 0.8, 1.7), "models/sprops/geometry/qhex_12.mdl", "", vec4(75,75,75,255), 0, 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0, 49.513, 0), ang(0, 90, -180), vec(15.5, 0.5, 1.5), "models/sprops/geometry/qhex_12.mdl", "", vec4(50,50,50,255), 0, 0)
    
    
        local Parent = Bones["Right_Feather_1",number]
        
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0, -7.713, 0), ang(0, -90, -180), vec(3.9, 0.8, 1.7), "models/sprops/geometry/qhex_12.mdl", "", vec4(75,75,75,255), 0, 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0, -49.513, 0), ang(0, -90, -180), vec(15.5, 0.5, 1.5), "models/sprops/geometry/qhex_12.mdl", "", vec4(50,50,50,255), 0, 0)
    
        
        local Parent = Bones["Left_Feather_2",number]
        
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0, 7.713, 0), ang(0, 90, -180), vec(3.9, 0.8, 1.7), "models/sprops/geometry/qhex_12.mdl", "", vec4(75,75,75,255), 0, 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0, 49.513, 0), ang(0, 90, -180), vec(15.5, 0.5, 1.5), "models/sprops/geometry/qhex_12.mdl", "", vec4(50,50,50,255), 0, 0)
    	
        
        local Parent = Bones["Right_Feather_2",number]
        
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0, -7.713, 0), ang(0, -90, -180), vec(3.9, 0.8, 1.7), "models/sprops/geometry/qhex_12.mdl", "", vec4(75,75,75,255), 0, 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0, -42.613, 0), ang(0, -90, -180), vec(14, 0.5, 1.5), "models/sprops/geometry/qhex_12.mdl", "", vec4(50,50,50,255), 0, 0)
    	
        
        local Parent = Bones["Left_Feather_3",number]
        
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0, 7.713, 0), ang(0, 90, -180), vec(3.9, 0.8, 1.7), "models/sprops/geometry/qhex_12.mdl", "", vec4(75,75,75,255), 0, 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0, 33.813, 0), ang(0, 90, -180), vec(12, 0.5, 1.5), "models/sprops/geometry/qhex_12.mdl", "", vec4(50,50,50,255), 0, 0)
    	
        local Parent = Bones["Right_Feather_3",number]
        
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0, -7.713, 0), ang(0, -90, -180), vec(3.9, 0.8, 1.7), "models/sprops/geometry/qhex_12.mdl", "", vec4(75,75,75,255), 0, 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0, -33.813, 0), ang(0, -90, -180), vec(12, 0.5, 1.5), "models/sprops/geometry/qhex_12.mdl", "", vec4(50,50,50,255), 0, 0)
    	
    
        local Parent = Bones["Left_Feather_4",number]
        
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0, 7.713, 0), ang(0, 90, -180), vec(3.9, 0.8, 1.7), "models/sprops/geometry/qhex_12.mdl", "", vec4(75,75,75,255), 0, 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0, 26.613, 0), ang(0, 90, -180), vec(10, 0.5, 1.5), "models/sprops/geometry/qhex_12.mdl", "", vec4(50,50,50,255), 0, 0)
    	
        local Parent = Bones["Right_Feather_4",number]
        
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0, -7.713, 0), ang(0, -90, -180), vec(3.9, 0.8, 1.7), "models/sprops/geometry/qhex_12.mdl", "", vec4(75,75,75,255), 0, 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0, -26.613, 0), ang(0, -90, -180), vec(10, 0.5, 1.5), "models/sprops/geometry/qhex_12.mdl", "", vec4(50,50,50,255), 0, 0)
    	
    
        local Parent = Bones["Left_Feather_5",number]
        
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0, 7.713, 0), ang(0, 90, -180), vec(3.9, 0.8, 1.7), "models/sprops/geometry/qhex_12.mdl", "", vec4(75,75,75,255), 0, 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0, 18.913, 0), ang(0, 90, -180), vec(8, 0.5, 1.5), "models/sprops/geometry/qhex_12.mdl", "", vec4(50,50,50,255), 0, 0)
    	
    
        local Parent = Bones["Right_Feather_5",number]
        
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0, -7.713, 0), ang(0, -90, -180), vec(3.9, 0.8, 1.7), "models/sprops/geometry/qhex_12.mdl", "", vec4(75,75,75,255), 0, 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0, -18.913, 0), ang(0, -90, -180), vec(8, 0.5, 1.5), "models/sprops/geometry/qhex_12.mdl", "", vec4(50,50,50,255), 0, 0)
    	
    
        local Parent = Bones["Left_Arm_Joint_4",number]
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0, 0, 0), ang(0, 90, 0), vec(1.215, 0.405, 1.215), "models/sprops/misc/tubes_thin/size_2/t_tube_24x6.mdl", "sprops/sprops_grid_12x12", vec4(75,75,75,255), 0, 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0, -14.7, 0), ang(0, 0, 90), vec(0.4, 0.4, 0.64), "models/sprops/cylinders/size_3/cylinder_6x6.mdl", "", vec4(50,50,50,255), 0, 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0, 14.7, 0), ang(0, 0, 90), vec(0.4, 0.4, 0.64), "models/sprops/cylinders/size_3/cylinder_6x6.mdl", "", vec4(50,50,50,255), 0, 0)
    	
        local Parent = Bones["Right_Arm_Joint_4",number]
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0, 0, 0), ang(0, 90, 0), vec(1.215, 0.405, 1.215), "models/sprops/misc/tubes_thin/size_2/t_tube_24x6.mdl", "sprops/sprops_grid_12x12", vec4(75,75,75,255), 0, 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0, -14.7, 0), ang(0, 0, 90), vec(0.4, 0.4, 0.64), "models/sprops/cylinders/size_3/cylinder_6x6.mdl", "", vec4(50,50,50,255), 0, 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0, 14.7, 0), ang(0, 0, 90), vec(0.4, 0.4, 0.64), "models/sprops/cylinders/size_3/cylinder_6x6.mdl", "", vec4(50,50,50,255), 0, 0)
    	
        
        local Parent = Bones["Left_Arm_Joint_5",number]
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0, 0, 0), ang(0, 90, 0), vec(1.17, 0.39, 1.17), "models/sprops/misc/tubes_thin/size_2/t_tube_24x6.mdl", "sprops/sprops_grid_12x12", vec4(50,50,50,255), 0, 0)
        
        for(I2 = 0, 35){
            I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(-1, 0, -8.2):rotateAroundAxis(vec(1,0,0),360/36*I2), ang(18.5, -135, 0):rotateAroundAxis(vec(1,0,0),360/36*I2), vec(0.2, 0.1, 1.2), "models/sprops/geometry/qhex_18.mdl", "", vec4(50,50,50,255), 0, 0)
        }
        
        local Parent = Bones["Right_Arm_Joint_5",number]
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0, 0, 0), ang(0, 90, 0), vec(1.17, 0.39, 1.17), "models/sprops/misc/tubes_thin/size_2/t_tube_24x6.mdl", "sprops/sprops_grid_12x12", vec4(50,50,50,255), 0, 0)
        
        for(I2 = 0, 35){
            I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(-1, 0, -8.2):rotateAroundAxis(vec(1,0,0),360/36*I2), ang(18.5, 135, 0):rotateAroundAxis(vec(1,0,0),360/36*I2), vec(0.2, 0.1, 1.2), "models/sprops/geometry/qhex_18.mdl", "", vec4(50,50,50,255), 0, 0)
        }
        
        
        local Parent = Bones["Left_Arm_Joint_3",number]
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(4, 45, -11.5), ang(0, -90, 0), vec(1.4, 0.6, 1.4), "models/sprops/misc/tubes_thin/size_2/t_h_tube_24x6.mdl", "sprops/sprops_grid_12x12", vec4(50,50,50,255), 0, 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(2.1748, 14.523, 0.6152), ang(3.3781, -97.78, 93.618), vec(1, 1, 1), "models/sprops/rectangles/size_1_5/rect_6x30x3.mdl", "", vec4(75,75,75,255), 0, 0)
    	    
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(2.3003, 14.402, -1.7471), ang(-7.1161, -98.124, 91.68), vec(0.9, 1, 1), "models/sprops/rectangles/size_1_5/rect_6x30x3.mdl", "", vec4(75,75,75,255), 0, 0)
    	    
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(4, 34.121, -4.6543), ang(26.2696, 90, -180), vec(1.5, 1, 1.1), "models/sprops/geometry/qhex_24.mdl", "", vec4(75,75,75,255), 0, 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(4.0176, 26.176, -12.8242), ang(63.6368, -90, 0), vec(0.85, 1, 0.9), "models/sprops/triangles/right/size_1/rtri_12x12.mdl", "", vec4(75,75,75,255), 0, 0)
        
        
        
        local Parent = Bones["Right_Arm_Joint_3",number]
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(4, -45, -11.5), ang(0, 90, 0), vec(1.4, 0.6, 1.4), "models/sprops/misc/tubes_thin/size_2/t_h_tube_24x6.mdl", "sprops/sprops_grid_12x12", vec4(50,50,50,255), 0, 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(4, -34.1211, -4.6543), ang(26.2696, -90, -180), vec(1.5, 1, 1.1), "models/sprops/geometry/qhex_24.mdl", "", vec4(75,75,75,255), 0, 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(2.1748, -14.5234, 0.6152), ang(3.3781, 97.7796, 86.382), vec(1, 1, 1), "models/sprops/rectangles/size_1_5/rect_6x30x3.mdl", "", vec4(75,75,75,255), 0, 0)
    	    
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(2.3003, -14.4023, -1.7471), ang(-7.1161, 98.1242, 88.3201), vec(0.9, 1, 1), "models/sprops/rectangles/size_1_5/rect_6x30x3.mdl", "", vec4(75,75,75,255), 0, 0)
    	    
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(4.0176, -26.1758, -12.8242), ang(63.6368, 90, 0), vec(0.85, 1, 0.9), "models/sprops/triangles/right/size_1/rtri_12x12.mdl", "", vec4(75,75,75,255), 0, 0)
    	
    
        local Parent = Bones["Left_Arm_Joint_2",number]
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0, 0, 15), ang(0, 0, 0), vec(0.7, 0.6, 1.3), "models/sprops/cylinders/size_4/cylinder_9x24.mdl", "", vec4(75,75,75,255), 0, 0)
    	
        local Parent = Bones["Right_Arm_Joint_2",number]
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0, 0, 15), ang(0, 0, 0), vec(0.7, 0.6, 1.3), "models/sprops/cylinders/size_4/cylinder_9x24.mdl", "", vec4(75,75,75,255), 0, 0)
        
        
        local Parent = Bones["Left_Arm_Joint_1",number]
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0, 0, -2), ang(180, 0, 0), vec(0.6, 0.3, 0.2), "models/sprops/misc/pyramids/rsize_1/rpyr_12x18.mdl", "", vec4(75,75,75,255), 0, 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0, 0, -2), ang(0, 0, 0), vec(0.6, 0.3, 5), "models/sprops/misc/pyramids/rsize_1/rpyr_12x18.mdl", "", vec4(75,75,75,255), 0, 0)
    	    CN++, CT[CN,table] = table(I, 1, vec(0, 0, 19), vec(0, 0, -1))
    
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(-0.001, -0.0015, 17.9707), ang(0, 0, 90), vec(0.7, 0.7, 0.5), "models/sprops/cylinders/size_4/cylinder_9x12.mdl", "", vec4(75,75,75,255), 0, 0)
    
        local Parent = Bones["Right_Arm_Joint_1",number]
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0, 0, -2), ang(180, 0, 0), vec(0.6, 0.3, 0.2), "models/sprops/misc/pyramids/rsize_1/rpyr_12x18.mdl", "", vec4(75,75,75,255), 0, 0)
    	
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(0, 0, -2), ang(0, 0, 0), vec(0.6, 0.3, 5), "models/sprops/misc/pyramids/rsize_1/rpyr_12x18.mdl", "", vec4(75,75,75,255), 0, 0)
    	    CN++, CT[CN,table] = table(I, 1, vec(0, 0, 19), vec(0, 0, -1))
    
        I++, HN++, HT[HN,table] = table(I, Parent, noentity(), 0, vec(-0.001, -0.0015, 17.9707), ang(0, 0, 90), vec(0.7, 0.7, 0.5), "models/sprops/cylinders/size_4/cylinder_9x12.mdl", "", vec4(75,75,75,255), 0, 0)
    }
    findIncludePlayerProps(owner())
    findInSphere(Base:pos(),1000)
    rangerFilter(findToArray())
    function vector bezier4( T, [P1 P2 P3 P4]:vector ) {
        return P1 * ( 1 - T ) ^ 3 + P2 * 3 * T * ( 1 - T ) ^ 2 + P3 * 3 * T ^ 2 * ( 1 - T ) + P4 * T ^ 3
    }
    function array:holo() {
        local Index = This[1, number]
        
        holoCreate(Index, (This[2,entity]:isValid() ? This[2,entity] : (holoEntity(This[2,number]):isValid() ? holoEntity(This[2,number]) : entity())):toWorld(This[5, vector]), (This[7, number] ? vec(This[7, number]) : This[7, vector]), (This[2,entity]:isValid() ? This[2,entity] : (holoEntity(This[2,number]):isValid() ? holoEntity(This[2,number]) : entity())):toWorld(This[6, angle]))
        holoParent(Index, This[2,entity]:isValid() ? This[2,entity] : (holoEntity(This[2,number]):isValid() ? holoEntity(This[2,number]) : entity()))
        holoModel(Index, This:exists(8) ? This[8, string] : "cube")
        holoMaterial(Index, This:exists(9) ? This[9, string] : "")
        if(This:exists(10)){
            if(This[10, vector]!=vec()){
                holoColor(Index, This[10, vector])
            }elseif(This[10, vector4]!=vec4()){
                holoColor(Index, This[10, vector4])
            }else{
                holoColor(Index, vec(255))
            }
        }else{
            holoColor(Index, vec(255))
        }
        if(This[3,entity]:isValid() && This[3,entity] != noentity()){
            holoPos(Index,This[3,entity]:pos())
            holoAng(Index,This[3,entity]:angles())
            This[3,entity]:parentTo(holoEntity(Index))
            #This[3,entity]:setAlpha(255)
            holoPos(Index,(This[2,entity]:isValid() ? This[2,entity] : (holoEntity(This[2,number]):isValid() ? holoEntity(This[2,number]) : entity())):toWorld(This[5, vector]))
            holoAng(Index,(This[2,entity]:isValid() ? This[2,entity] : (holoEntity(This[2,number]):isValid() ? holoEntity(This[2,number]) : entity())):toWorld(This[6, angle]))
        }
        holoSkin(Index, This:exists(11) ? This[11, number] : 0)
    }
    
    function table:holo() {
        local Index = This[1, number]
        holoCreate(Index, (This[2,entity]:isValid() ? This[2,entity] : (holoEntity(This[2,number]):isValid() ? holoEntity(This[2,number]) : entity())):toWorld(This[5, vector]), (This[7, number] ? vec(This[7, number]) : This[7, vector]), (This[2,entity]:isValid() ? This[2,entity] : (holoEntity(This[2,number]):isValid() ? holoEntity(This[2,number]) : entity())):toWorld(This[6, angle]))
        holoParent(Index, This[2,entity]:isValid() ? This[2,entity] : (holoEntity(This[2,number]):isValid() ? holoEntity(This[2,number]) : entity()))
        holoModel(Index, This:exists(8) ? This[8, string] : "cube")
        holoMaterial(Index, This:exists(9) ? This[9, string] : "")
        if(This:exists(10)){
            if(This[10, vector]!=vec()){
                holoColor(Index, This[10, vector])
            }elseif(This[10, vector4]!=vec4()){
                holoColor(Index, This[10, vector4] == vec4(75,75,75,255) ? vec4(255) : This[10, vector4] == vec4(50,50,50,255) ? vec4(175,175,175,255) : This[10, vector4])
            }else{
                holoColor(Index, vec(255))
            }
        }else{
            holoColor(Index, vec(255))
        }
        
        holoDisableShading(Index, This:exists(11) ? This[11, number] : 0)
    }

    #- Clip a hologram from data array
    function array:clip() {
        holoClipEnabled(This[1, number], This[2, number], 1)
        holoClip(This[1, number], This[2, number], This[3, vector], This[4, vector], 0)
    }
    function table:clip() {
        holoClipEnabled(This[1, number], This[2, number], 1)
        holoClip(This[1, number], This[2, number], This[3, vector], This[4, vector], 0)
    }
    #- Load the contraption
    function loadContraption() {
        switch (SpawnStatus) {
            case "InitSpawn",
                if (clk("Start")) {
                    SpawnStatus = "LoadHolograms"
                }
            break

            case "LoadHolograms",
                while (perf() & holoCanCreate() & (holoRemainingSpawns() > 5) &  SpawnCounter < HN) {
                    SpawnCounter++
                    HT[SpawnCounter, array]:holo()
                    HT[SpawnCounter, table]:holo()
                    if (SpawnCounter >= HN) {
                        SpawnStatus = CN > 0 ? "LoadClips" : "PrintStatus"
                        SpawnCounter = 0
                        break
                    }
                }
            break

            case "LoadClips",
                while (perf() & SpawnCounter < CN) {
                    SpawnCounter++
                    CT[SpawnCounter, array]:clip()
                    CT[SpawnCounter, table]:clip()

                    if (SpawnCounter >= CN) {
                        SpawnStatus = "PrintStatus"
                        SpawnCounter = 0
                        break
                    }
                }
            break

            case "PrintStatus",
                printColor( vec(222,37,188), "Holo Loader 3.0: ", vec(255,255,255), "Loaded " + HN + " holograms and " + CN + " clips." )

                HT:clear()
                CT:clear()

                CoreStatus = "InitPostSpawn"
                SpawnStatus = ""
            break
        }
    }
    
    function number icos(A, B, C) {
        return acos((A^2 + B^2 - C^2) / (2*A*B))    
    }
    function leg_ik(LeftRight,Rotation,Target:vector,StepLift){
        local Base=Bones[LeftRight ? "Right_LegHelper" : "Left_LegHelper",number]
        local NHip=Bones[LeftRight ? "Right_Thigh" : "Left_Thigh",number]
        local NKnee=Bones[LeftRight ? "Right_Calf" : "Left_Calf",number]
        local NFoot=Bones[LeftRight ? "Right_Foot" : "Left_Foot",number]
        
        holoAng(Base, holoEntity(Bones["Pelvis",number]):toWorld(ang(0,Rotation,0)))
        
        local Origin = holoEntity(NHip):pos()
        local AxisLocal = holoEntity(Base):toLocalAxis(Target - Origin)

        local AxisAngle = AxisLocal:toAngle():setRoll(-bearing(Target, holoEntity(Base):angles(), Origin)) #-- forward knee
        
        local LengthC = min(AxisLocal:length(), Length1_Leg + Length2_Leg)
        local AxisQuat = quat(AxisAngle) * qRotation(vec(0, 1, 0), 90 + icos(LengthC, Length1_Leg, Length2_Leg))
        
        holoAng(NHip, holoEntity(Base):toWorld(AxisQuat:toAngle()))
        holoAng(NKnee, holoEntity(NHip):toWorld(ang(icos(Length2_Leg, Length1_Leg, LengthC) + 180, 0, 0)))
        holoAng(NFoot, slerp(quat(ang(0,holoEntity(Base):angles():yaw(),0)),quat(holoEntity(NKnee):toWorld(ang(0,0,180))),StepLift*MoveVal|Flying):toAngle())
    }
    function arm_ik(LeftRight,Rotation,Target:vector,AngleData:table){
        local Base=Bones[LeftRight ? "Right_Shoulder" : "Left_Shoulder",number]
        local NHip=Bones[LeftRight ? "Right_UpperArm" : "Left_UpperArm",number]
        local NKnee=Bones[LeftRight ? "Right_ForeArm" : "Left_ForeArm",number]
        local NFoot=Bones[LeftRight ? "Right_Hand" : "Left_Hand",number]
        local NFoot2=Bones[LeftRight ? "Right_Hand_Real" : "Left_Hand_Real",number]
        
        holoAng(Base, holoEntity(Bones["Spine2",number]):toWorld(ang(0,Rotation,0)))
        
        local Origin = holoEntity(NHip):pos()
        local AxisLocal = holoEntity(Base):toLocalAxis(Target - Origin)

        local AxisAngle = AxisLocal:toAngle():setRoll(-bearing(Origin, holoEntity(Base):angles(), Target)) #-- forward knee
        
        local LengthC = min(AxisLocal:length(), Length1_Arm + Length2_Arm)
        local AxisQuat = quat(AxisAngle) * qRotation(vec(0, 1, 0), 90 + icos(LengthC, Length1_Arm, Length2_Arm))
        
        holoAng(NHip, holoEntity(Base):toWorld(AxisQuat:toAngle()))
        holoAng(NKnee, holoEntity(NHip):toWorld(ang(icos(Length2_Arm, Length1_Arm, LengthC) + 180, 0, 0)))
        local Mix=AngleData[2,number]
        holoAng(NFoot, slerp(quat(holoEntity(Bones["Spine2",number]):toWorld(ang(160,0,0))),quat(AngleData[1,angle]),clamp(Mix,0,1)):toAngle())
        
        local HandAng = holoEntity(NFoot):angles()
        local HandAngLocal = holoEntity(NKnee):toLocal(holoEntity(NFoot):angles())
        
        holoAng(NFoot2, holoEntity(NKnee):toWorld(ang(0,HandAngLocal:yaw(),0)))
        
    }
    function wing_arm_ik(LeftRight, Target:vector, Rotation, Rotation2, MixRotation, Ang:angle, Mix2) {
        local LengthA = 35/2
        local LengthB = 60/2
        local Base=Bones[LeftRight ? "Right_Arm_Joint_Helper2" : "Left_Arm_Joint_Helper2",number]
        local NHipA=Bones[LeftRight ? "Right_Arm_Joint_Helper" : "Left_Arm_Joint_Helper",number]
        local NHipB=Bones[LeftRight ? "Right_Arm_Joint_1" : "Left_Arm_Joint_1",number]
        local NKnee=Bones[LeftRight ? "Right_Arm_Joint_2" : "Left_Arm_Joint_2",number]
        local NFoot=Bones[LeftRight ? "Right_Arm_Joint_3" : "Left_Arm_Joint_3",number]
        
        local AxisWorld = Target - holoEntity(NHipA):pos()
        local AxisLocal = holoEntity(Base):toLocalAxis(AxisWorld)

        holoAng(NHipA, holoEntity(Base):toWorld(ang(0, 0, atan(AxisLocal:z(), AxisLocal:y()) + 90)))

        local AxisLocal = holoEntity(NHipA):toLocalAxis(Target - holoEntity(NHipB):pos())
        local Distance = min(AxisLocal:length(), LengthA + LengthB)

        #holoAng(NHipB, holoEntity(NHipA):toWorld(ang(atan(-AxisLocal:x(), AxisLocal:z()) + icos(Distance, LengthA, LengthB), 180, 0))) #-- forward knee   
        holoAng(NHipB, holoEntity(NHipA):toWorld(ang(atan(AxisLocal:x(), AxisLocal:z()) + icos(Distance, LengthA, LengthB), 0, 0))) #-- reverse knee
        holoAng(NKnee, holoEntity(NHipB):toWorld(ang(icos(LengthB, LengthA, Distance) + 180, 0, 0)))
        holoAng(NFoot, slerp(quat(holoEntity(Base):toWorld(ang(Rotation-60,0,Rotation2)*(1-Mix2))),quat(holoEntity(LeftRight ? Bones["Right_Wing_Joint_2",number] : Bones["Left_Wing_Joint_2",number]):toWorld(Ang)),(1-MixRotation)*(1-Mix2)):toAngle())
        
    }
    function angle vectorJiggle2World(Index:number, Target:vector, VelocityKeep:number, VelocityAdd:number, Up:vector) {
        if (!JiggleTable:exists(Index)) {
            JiggleTable[Index, array] = array(Target, vec(0), Up, vec(0))
            return Target:toAngle():setRoll(0)
        }
    
        local Entry = JiggleTable[Index, array]
        local Dir = Entry[1, vector]
        local Vel = Entry[2, vector]
        local UpVec = Entry[3, vector]
        local UpVel = Entry[4, vector]
    
        # --- Drag vector: opposite of velocity direction ---
        local Speed = Base:vel():length()
        local DragDir = (Speed > 5 ? (-Base:vel() - vec(0,0,9.8)):normalized() : vec(0))
    
        if (DragDir != vec(0)) {
            # Dot product to see how aligned we already are (1 = facing backward already)
            local Alignment = Dir:dot(DragDir)
            # Blend Target direction slightly toward drag direction
            Target = (Target - DragDir * Alignment * clamp(Speed/53/200,0,1)):normalized()
        }
    
        # --- Direction jiggle smoothing ---
        Vel = Vel * VelocityKeep + (Target - Dir) * VelocityAdd
        Dir = (Dir + Vel):normalized()
    
        # --- Up jiggle smoothing ---
        UpVel = UpVel * VelocityKeep + (Up - UpVec) * VelocityAdd
        UpVec = (UpVec + UpVel):normalized()
    
        # --- Save back ---
        Entry[1, vector] = Dir
        Entry[2, vector] = Vel
        Entry[3, vector] = UpVec
        Entry[4, vector] = UpVel
        JiggleTable[Index, array] = Entry
    
        return Dir:toAngle(UpVec)
    }

    runOnTick(1)
    timer("Start", 500)
    CoreStatus = "InitSpawn"
    SpawnStatus = "InitSpawn"
    #ifdef entity:linkToPod(entity)
        PodController=spawnPodController(entity():pos()+vec(0,0,250),ang(),1,Seat)
        PodController:propDraw(0)
    #endif
}elseif (CoreStatus == "InitSpawn") {
    loadContraption()
}elseif (CoreStatus == "InitPostSpawn") {
    #- This is your "if (first())" section of the code.
    if(!EditMode){
        Base:propFreeze(0)
        #ifdef entity:linkToPod(entity)
            PodController:linkToPod(Seat)
            PodControllerW=PodController:wirelink()
            PodControllerW["Crosshairs",number]=1
        #endif
        Animation["current_weapon",string]="none"
        Landed=1
        timer("int",50)
    }
    
    BoostData["unblockMovement",number]=1
    
    CamParent=holoEntity(Bones["CamParent",number])
    holoUnparent(Bones["Root",number])
    runOnTick(0)
    
    CoreStatus = "CodeRun"
    
}elseif(clk("int")){
    timer("int",50)
    Driver=Seat:driver()
    Ground_Ranger=rangerOffsetHull((Length1_Leg+Length2_Leg)+15+13*!Boosting,Base:pos(),vec(0,0,-1),vec(25/3.15,25/3.15,5))
    
    On_Ground=(Ground_Ranger:distance()<=((Length1_Leg+Length2_Leg)+6+19*Flying))
    BaseVel=Base:vel()#Base:forward()*80#Base:vel()
    SP = Driver:keySprint()*On_Ground2*!Driver:keyPressed("s")
    M1 = Driver:keyAttack1()
    M2 = Driver:keyAttack2()
    W2 = Driver:keyPressed("w")*(On_Ground2|Flying)
    S2 = Driver:keyPressed("s")*(On_Ground2|Flying)
    A2 = Driver:keyPressed("a")*(On_Ground2|Flying)
    D2 = Driver:keyPressed("d")*(On_Ground2|Flying)
    UP = max(Driver:keyJump(),clamp(SpaceForABit*2,0,1))
    SL = 0#Driver:keyWalk()
    DN = Driver:keyWalk()
    
    if(changed(M1|M2)){
        if(M1|M2){
            Base:emitSound("^thrusters/Rocket04.wav",100,100)
        }else{
            Base:emitSoundStop("^thrusters/Rocket04.wav")
            Base:emitSound("buttons/lever5.wav",100,100)
        }
    }
    #ifdef boom2(vector,number,number)
        if((M1|M2)&((curtime()-LaserCT)>0.1)){
            LaserCT = curtime()
            boom2(Driver:aimPos(),200,150)
        }
    #endif
    if(changed(DN)&DN&(FlyingStartVal==0)){
        DN2=!DN2
    }
    
    LocalEyes = Driver:isValid() ? SL ? LocalEyes : Driver:eyeAngles() : holoEntity(Bones["Head",number]):angles()
    
    if(changed(Driver:isPlayer())&Driver:isPlayer()){
        Base:propFreeze(0)
    }
    
    On_Ground2=(((holoEntity(Bones["Pelvis",number]):toWorld(vec(0,0,-42))-(holoEntity(Bones["Root",number]):pos())):z()>-4)*Ground_Ranger:hit()|On_Ground|Flying)*Landed
    if(On_Ground&DN&Flying){
        Landed=DN
        FlyingStart2=0
    }
    if(changed(UP)&UP&!Flying&!FlyingStart2){
        FlyingStart2=1
        Base:soundPlay("flightloop",0,"^thrusters/Hover01.wav")
        Base:soundPlay("flightloop2",0,"^thrusters/mh1.wav")
        DN2=0
    }
    FlyingStartVal += 0.1*(FlyingStart2*(DOWN<=0.4)-!FlyingStart2*0.5)
    FlyingStartVal=clamp(FlyingStartVal,Flying*FlyingStart2,0.5+FlyingStart2*0.5)
    if(FlyingStart2&(FlyingStartVal>=1)&!Flying){
        Flying=1
        SpaceForABit=1
    }
    if(FlyingStartVal==0&Flying){
        Flying=0
        DN2=1
        soundStop("flightloop")
        soundStop("flightloop2")
    }
    soundPitch("flightloop",50*FlyingStart2+(100/(1+FlyingStart2))*FlyingStartVal+35*Base:vel():length()*0.002)
    soundPitch("flightloop2",50*FlyingStart2+(100/(1+FlyingStart2))*FlyingStartVal+35*Base:vel():length()*0.002)
    
    SpaceForABit-=0.1
    SpaceForABit=clamp(SpaceForABit,0,1)
    W=W2
    S=S2
    A=A2
    D=D2
    
    MOVEW += 0.1*(W-!W)
    MOVEW=clamp(MOVEW,0,1)
    
    MOVES += 0.1*(S-!S)
    MOVES=clamp(MOVES,0,1)
    
    MOVEA += 0.1*(A-!A)
    MOVEA=clamp(MOVEA,0,1)
    
    MOVED += 0.1*(D-!D)
    MOVED=clamp(MOVED,0,1)
    
    DOWN += 0.1*(DN2-!DN2)
    DOWN=clamp(DOWN,0,1)
    
    Moving=W|S|A|D|UP|DN
    
    MoveVal += 0.15*(Moving-!Moving)
    MoveVal=clamp(MoveVal,0,1)
    
    ShiftVal += 0.1*(SP-!SP)
    ShiftVal=clamp(ShiftVal,0,MOVEW)
    
    if(Flying){
        DN2 = 0
    }
    if(Moving){
        if(SP){
            MOVEMAX += 0.2
        }
        elseif(SL){
            MOVEMAX += 0.05
        }
        else{
            MOVEMAX += 0.1
        }
    }else{
        MOVEMAX -= 0.1
    }
    MOVEMAX=clamp(MOVEMAX,0,1)
    if(Ground_Ranger:hit()|Flying){
        MOVEX = clamp(abs(MOVEW-MOVES)/sqrt(abs(MOVEW-MOVES)+abs(MOVED-MOVEA)),0,1)*sign(MOVEW-MOVES)*MOVEMAX
        MOVEY = clamp(abs(MOVED-MOVEA)/sqrt(abs(MOVEW-MOVES)+abs(MOVED-MOVEA)),0,1)*sign(MOVED-MOVEA)*MOVEMAX
    }
    else{
        MOVEX = 0
        MOVEY = 0
    }
    
    if(isnan(MOVEX)|isnan(MOVEY)){
        MOVEX = 0
        MOVEY = 0
    }
    
    Base:propGravity(!On_Ground*!Flying)
    
    if(changed(Driver)){
        Base:soundPlay("flightloop3",0,"^thrusters/Hover00.wav")
        Seat:propNotSolid(Driver:isValid())
        if(Driver==owner()){
            owner():setMaterial("null")
        }else{
            owner():setMaterial("")
        }
    }
    soundVolume("flightloop3",1*Flying*clamp(Base:vel():length()*0.01,0,1))
    if(!Seat:driver():isValid()){
        #ifdef entity:plySetPos(vector)
            foreach(I,E:entity=DriverTargets){
                if(changed(E:keyPressed("m"))&E:keyPressed("m")){
                    E:plyEnterVehicle(Seat)
                }
            }
        #else
            if(changed(owner():keyPressed("m"))&owner():keyPressed("m")){
                Seat:use()
            }
        #endif
    }
    Dir=vec(W-S,A-D,0):normalized()
    Dir2=LocalEyes:forward()
    if(Flying){
        Yaw=LocalEyes:yaw()
    }else{
        if(Dir:length()>0.1|(abs(holoEntity(Bones["Pelvis",number]):toLocal(LocalEyes):yaw())>125)){
            Yaw+=((45*(MOVEA-MOVED)+PelvisAng:yaw()+holoEntity(Bones["Pelvis",number]):toLocal(LocalEyes):yaw())/3)
        }
        Yaw=slerp(quat(ang(0,Yaw,0)),quat(BaseVel:toAngle(vec(0,0,1))),0.5*ShiftVal):toAngle():forward():toAngle(vec(0,0,1)):yaw()
        if(isnan(Yaw)){
            Yaw=holoEntity(Bones["Pelvis",number]):angles():yaw()
        }
    }
    
    Dir3=slerp(quat(ang(0,Dir2:toAngle(vec(0,0,1)):yaw(),0)),quat(ang(0,Yaw,0)),0.2):toAngle():forward():toAngle(vec(0,0,1))
    Dir4=Base:toLocal(Dir2:toAngle())
    
    holoPos(Bones["Root",number],Ground_Ranger:position()+vec(0,0,49.5)-vec(0,0,BaseVel:z()*tickInterval()*15/2)*On_Ground)
    
    HeightForce=vec(0,0,clamp((Length1_Leg+Length2_Leg) - Ground_Ranger:distance(),-(Length1_Leg+Length2_Leg)-6,(Length1_Leg+Length2_Leg)+6)*15)
    MoveForce=vec(MOVEX,-MOVEY,0):rotateAroundAxis(vec(0,0,1),LocalEyes:yaw())*(0.4+ShiftVal*0.4)*MOVEMAX*MoveVal*(1-sin(ShiftVal*180)*0.4*SP)*(M2*(1-ShiftVal) ? 0.6 : 1)
    DampForce=-(Base:toWorld(Base:velL())-Base:pos())
    if(Flying){
        Base:applyForce(((LocalEyes:forward():rotateAroundAxis(Base:right(),90*UP/(1+MOVEW)*MOVEW*ShiftVal)*MOVEX+LocalEyes:right()*MOVEY+vec(0,0,-DN*0.75*!On_Ground+UP*(1-ShiftVal*MOVEW)))*(500+(500*ShiftVal))*0.35+DampForce*0.12)*Base:mass())
        Base:applyAngForce((Base:toLocal(ang(LocalEyes:pitch()*ShiftVal,Yaw-45*MOVEY*(1-MOVEW)*(1-ShiftVal),0))*5-Base:angVel()*0.5)*Base:mass()*5)
    }else{
        Base:applyForce((Ground_Ranger:entity():vel()+HeightForce+MoveForce*BoostData["unblockMovement",number]*(300+(200*ShiftVal))+DampForce)*Base:mass()*On_Ground)
        Base:applyAngForce(-(Base:angles()*5+Base:angVel()*0.5)*Base:mass()*5)
    }
    
    Vel=((BaseVel/100)-(Ground_Ranger:entity():vel()/100))*0.3
    Add=(0.4+(Vel:setZ(0):length()*0.45))*(0.22-(0.05*ShiftVal))
    WalkRate+=Add
    WalkRate=clamp(WalkRate,0,!Flying)*On_Ground2
    Sin=sin(WalkRate*180)*MoveVal
    Sin2=sin((0.1+WalkRate)*180)*MoveVal
    Sin3=bezier(vec(),vec(1),vec(),WalkRate):x()*(Step-!Step)*MoveVal
    Sin4=sin(WalkRate*180)*MoveVal
    Cos=cos(WalkRate*90)*MoveVal
    Cos2=cos((0.5+WalkRate)*180)*MoveVal
    Distance=55+(20*ShiftVal)
    
    if(Flying){
        if(Moving&SP){
            Animation["state",string]="move_air"
        }else{
            Animation["state",string]="air_idle"
        }
    }else{
        if(Moving){
            if(SP){
                Animation["state",string]="run"
            }else{
                Animation["state",string]="walk"
            }
        }else{
            Animation["state",string]="idle"
        }
    }
    if(changed(Animation["state",string])){
        Animation["PelvisAngLast",angle]=Animation["PelvisAngNext",angle]
        Animation["PelvisOffsetLast",vector]=Animation["PelvisOffsetNext",vector]
        Animation["Spine1AngLast",angle]=Animation["Spine1AngNext",angle]
        Animation["Spine2AngLast",angle]=Animation["Spine2AngNext",angle]
        Animation["HeadAngLast",angle]=Animation["HeadAngNext",angle]
        Animation["MixAnim",number]=0
    }
    MoveL=Base:velL()*0.01
    switch(Animation["state",string]){
        case "idle",
            switch(Animation["current_weapon",string]){
                case "none",
                    Animation["PelvisAngNext",angle]=ang(0,0,0)
                    Animation["PelvisOffsetNext",vector]=vec(0,0,0)
                    Animation["Spine1AngNext",angle]=ang(0,0,0)
                    Animation["Spine2AngNext",angle]=ang(0,0,0)
                    Animation["HeadAngNext",angle]=ang(0,0,0)
                    
                    LeftArmTarget=holoEntity(Bones["Pelvis",number]):toWorld(vec(4+10*ShiftVal+8*Sin4*(!Step-Step)*ShiftVal,19,-3+1*(1+ShiftVal*2)+2*ShiftVal+2*Sin*(1+ShiftVal)):rotateAroundAxis(vec(0,0,1),holoEntity(Bones["Pelvis",number]):toLocal(LocalEyes):yaw()*0.5+35*Sin3))
                    RightArmTarget=holoEntity(Bones["Pelvis",number]):toWorld(vec(4+10*ShiftVal+8*Sin4*(Step-!Step)*ShiftVal,-19,-3+1*(1+ShiftVal*2)+2*ShiftVal+2*Sin*(1+ShiftVal)):rotateAroundAxis(vec(0,0,1),holoEntity(Bones["Pelvis",number]):toLocal(LocalEyes):yaw()*0.5+35*Sin3))
                    
                    RollArmLeft=25
                    RollArmRight=25
                break
            }
        break
        case "air_idle",
            switch(Animation["current_weapon",string]){
                case "none",
                    Animation["PelvisAngNext",angle]=ang(25*MOVEX-(MoveL:x()-MOVEX*(16+20*ShiftVal))*6,Yaw,25*MOVEY)*(1-ShiftVal)+ang(90+LocalEyes:pitch(),Yaw,0)*(ShiftVal)
                    Animation["PelvisOffsetNext",vector]=vec(0,0,0)
                    Animation["Spine1AngNext",angle]=ang(0,0,0)
                    Animation["Spine2AngNext",angle]=ang(0,0,0)
                    Animation["HeadAngNext",angle]=ang(-15*MOVEX,0,-5*MOVEY)*(1-ShiftVal)+ang(-45,0,0)*(ShiftVal)
                    
                    LeftArmTarget=holoEntity(Bones["Spine1",number]):toWorld(vec(6,25,-3))
                    RightArmTarget=holoEntity(Bones["Spine1",number]):toWorld(vec(6,-25,-3))
                    
                    RollArmLeft=0
                    RollArmRight=0
                    
                    LeftLegFly=holoEntity(Bones["Pelvis",number]):toWorld(vec(0,5,-15))
                    RightLegFly=holoEntity(Bones["Pelvis",number]):toWorld(vec(0,-5,-10-5*ShiftVal))
                break
            }
        break
        case "move_air",
            switch(Animation["current_weapon",string]){
                case "none",
                    Animation["PelvisAngNext",angle]=ang(25*MOVEX-(MoveL:x()-MOVEX*(16+20*ShiftVal))*6,Yaw,25*MOVEY)*(1-ShiftVal)+ang(90+LocalEyes:pitch(),Yaw,0)*(ShiftVal)
                    Animation["PelvisOffsetNext",vector]=vec(0,0,0)
                    Animation["Spine1AngNext",angle]=ang(0,0,0)
                    Animation["Spine2AngNext",angle]=ang(0,0,0)
                    Animation["HeadAngNext",angle]=ang(-15*MOVEX,0,-5*MOVEY)*(1-ShiftVal)+ang(-45,0,0)*(ShiftVal)
                    
                    LeftArmTarget=holoEntity(Bones["Spine1",number]):toWorld(vec(6,25,-3))
                    RightArmTarget=holoEntity(Bones["Spine1",number]):toWorld(vec(6,-25,-3))
                    
                    RollArmLeft=0
                    RollArmRight=0
                    
                    LeftLegFly=holoEntity(Bones["Pelvis",number]):toWorld(vec(0,5,-15))
                    RightLegFly=holoEntity(Bones["Pelvis",number]):toWorld(vec(0,-5,-10-5*ShiftVal))
                break
            }
        break
        case "walk",
            switch(Animation["current_weapon",string]){
                case "none",
                    Animation["PelvisAngNext",angle]=ang(0,0,0)
                    Animation["PelvisOffsetNext",vector]=vec(0,0,0)
                    Animation["Spine1AngNext",angle]=ang(5,0,5*Sin2*(Step-!Step)-6*(MOVEA-MOVED))
                    Animation["Spine2AngNext",angle]=ang(15,0,4*Sin*(Step-!Step)-12*(MOVEA-MOVED))
                    Animation["HeadAngNext",angle]=ang(5,0,0)
                    
                    LeftArmTarget=holoEntity(Bones["Pelvis",number]):toWorld(vec(4+10*ShiftVal+8*Sin4*(!Step-Step)*ShiftVal,19,-3+1*(1+ShiftVal*2)+2*ShiftVal+2*Sin*(1+ShiftVal)):rotateAroundAxis(vec(0,0,1),holoEntity(Bones["Pelvis",number]):toLocal(LocalEyes):yaw()*0.5+35*Sin3))
                    RightArmTarget=holoEntity(Bones["Pelvis",number]):toWorld(vec(4+10*ShiftVal+8*Sin4*(Step-!Step)*ShiftVal,-19,-3+1*(1+ShiftVal*2)+2*ShiftVal+2*Sin*(1+ShiftVal)):rotateAroundAxis(vec(0,0,1),holoEntity(Bones["Pelvis",number]):toLocal(LocalEyes):yaw()*0.5+35*Sin3))
                    
                    RollArmLeft=25
                    RollArmRight=25
                break
            }
        break
        case "run",
            switch(Animation["current_weapon",string]){
                case "none",
                    Animation["PelvisAngNext",angle]=ang(0,0,0)
                    Animation["PelvisOffsetNext",vector]=vec(0,0,0)
                    Animation["Spine1AngNext",angle]=ang(5,0,12*Sin2*(Step-!Step)-15*(MOVEA-MOVED))
                    Animation["Spine2AngNext",angle]=ang(35,0,8*Sin*(Step-!Step)-19*(MOVEA-MOVED))
                    Animation["HeadAngNext",angle]=ang(-5,0,0)
                    
                    LeftArmTarget=holoEntity(Bones["Pelvis",number]):toWorld(vec(4+10*ShiftVal+8*Sin4*(!Step-Step)*ShiftVal,16,-3+1*(1+ShiftVal*2)+5*ShiftVal+2*Sin*(1+ShiftVal)):rotateAroundAxis(vec(0,0,1),holoEntity(Bones["Pelvis",number]):toLocal(LocalEyes):yaw()*0.5+35*Sin3))
                    RightArmTarget=holoEntity(Bones["Pelvis",number]):toWorld(vec(4+10*ShiftVal+8*Sin4*(Step-!Step)*ShiftVal,-16,-3+1*(1+ShiftVal*2)+2*ShiftVal+2*Sin*(1+ShiftVal)):rotateAroundAxis(vec(0,0,1),holoEntity(Bones["Pelvis",number]):toLocal(LocalEyes):yaw()*0.5+35*Sin3))
                    
                    RollArmLeft=25
                    RollArmRight=25
                break
            }
        break
    }
    Animation["MixAnim",number]=Animation["MixAnim",number]+1/3
    Animation["MixAnim",number]=clamp(Animation["MixAnim",number],0,1)
    PelvisAng=slerp(quat(Animation["PelvisAngNext",angle]),quat(Animation["PelvisAngLast",angle]),1-Animation["MixAnim",number]):toAngle()
    PelvisOffset=mix(Animation["PelvisOffsetNext",vector],Animation["PelvisOffsetLast",vector],1-Animation["MixAnim",number])
    Spine1Ang=slerp(quat(Animation["Spine1AngNext",angle]),quat(Animation["Spine1AngLast",angle]),1-Animation["MixAnim",number]):toAngle()
    Spine2Ang=slerp(quat(Animation["Spine2AngNext",angle]),quat(Animation["Spine2AngLast",angle]),1-Animation["MixAnim",number]):toAngle()
    HeadAng=slerp(quat(Animation["HeadAngNext",angle]),quat(Animation["HeadAngLast",angle]),1-Animation["MixAnim",number]):toAngle()
    if(Animation["MixAnim",number]>=1){
        Animation["PelvisAngLast",angle]=Animation["PelvisAngNext",angle]
        Animation["PelvisOffsetLast",vector]=Animation["PelvisOffsetNext",vector]
        Animation["Spine1AngLast",angle]=Animation["Spine1AngNext",angle]
        Animation["Spine2AngLast",angle]=Animation["Spine2AngNext",angle]
        Animation["HeadAngLast",angle]=Animation["HeadAngNext",angle]
    }
    Vel2=Base:vel()*0.01
    
    if(Landed){
        Ranger2=rangerOffsetHull(100,holoEntity(Bones["Pelvis",number]):toWorld(vec(2,10-3*MoveVal,0))+mix(Vel:normalized()*clamp(Vel:length()*1.1,0,0.7)*Distance*On_Ground2,-Vel:normalized()*clamp(Vel:length()*1.1,0,0.7)*Distance*On_Ground2,WalkRate*Step+((1-WalkRate)*!Step)),vec(0,0,-1),vec(8,8,4))
        Ranger3=rangerOffsetHull(100,holoEntity(Bones["Pelvis",number]):toWorld(vec(-2,-10+3*MoveVal,0))+mix(Vel:normalized()*clamp(Vel:length()*1.1,0,0.7)*Distance*On_Ground2,-Vel:normalized()*clamp(Vel:length()*1.1,0,0.7)*Distance*On_Ground2,WalkRate*!Step+((1-WalkRate)*Step)),vec(0,0,-1),vec(8,8,4))
        LeftLeg=Ranger2:pos()
        RightLeg=Ranger3:pos()
    }else{
        LeftLeg=holoEntity(Bones["Pelvis",number]):toWorld(vec(0,9,0))+Vel2:setZ(0)-holoEntity(Bones["Pelvis",number]):up()*(Length1_Leg+Length2_Leg)*0.7
        RightLeg=holoEntity(Bones["Pelvis",number]):toWorld(vec(0,-9,0))+Vel2:setZ(0)-holoEntity(Bones["Pelvis",number]):up()*(Length1_Leg+Length2_Leg)*0.7
    }
    if(Ranger2:entity():owner()==owner()){
        rangerFilter(Ranger2:entity())
        rangerPersist(1)
    }
    if(Ranger3:entity():owner()==owner()){
        rangerFilter(Ranger3:entity())
        rangerPersist(1)
    }
    holoAng(Bones["Root",number],ang())
    holoAng(Bones["Pelvis",number],holoEntity(Bones["Root",number]):toWorld(ang(PelvisAng:pitch()+12*sin(curtime()*180*0.5)/(1+MoveVal)*(1-ShiftVal),PelvisAng:yaw()+90*MOVEY*(1-MOVEW)*(1-ShiftVal),PelvisAng:roll()-12*sin(curtime()*180*1.23*0.5)/(1+MoveVal)*(1-ShiftVal)):rotateAroundAxis(LocalEyes:forward(),-Base:angVel():yaw()*0.8*ShiftVal+45*MOVEY*ShiftVal):rotateAroundAxis(Base:right(),90*UP/(1+MOVEW)*MOVEW*ShiftVal):rotateAroundAxis(Base:up(),-45*MOVEY*ShiftVal):rotateAroundAxis(Base:forward(),-45*clamp(Base:angVel():yaw()/300,-1,1)*(1-ShiftVal))*Flying+(ang(0,PelvisAng:yaw()+Yaw+5*Cos2*(Step-!Step),-(10/(5-(ShiftVal*4)))*On_Ground2*clamp(toLocalAng(vec(),LocalEyes,vec(),ang(0,holoEntity(Bones["Pelvis",number]):angles():yaw(),0)):yaw()*0.1,-1,1)*MoveVal+(5*MOVEY*(1+ShiftVal))-0.2*Sin*(Step-!Step))*!Flying*ang(On_Ground2,1,On_Ground2)):rotateAroundAxis(ang(0,LocalEyes:yaw(),0):forward(),-5*clamp(MOVEA-MOVED,-1,1)*(1+ShiftVal)*On_Ground2):rotateAroundAxis(ang(0,LocalEyes:yaw(),0):right(),-12*clamp(MOVEW-MOVES,-0.5,1)*(1+ShiftVal)*On_Ground2)*!Flying))
    holoPos(Bones["Pelvis",number],Base:vel()*0.1*Flying+holoEntity(Bones["Root",number]):toWorld(vec(0,0,-(7+5*FlyingStart2)*sin(FlyingStartVal*180))+vec(PelvisOffset:x()+4*Flying*sin((curtime()+0.2)*180*0.5)/(1+MoveVal)*(1-ShiftVal),PelvisOffset:y()-4*Flying*sin((curtime()+0.2)*180*1.23*0.5)/(1+MoveVal)*(1-ShiftVal),Length1_Leg+Length2_Leg)*Landed+vec(0,0.2*Sin*(Step-!Step),-3*MoveVal+2*Sin*(1+ShiftVal*2)):rotateAroundAxis(vec(0,0,1),Yaw)*!Flying*Landed)+Vel:normalized()*Vel:length()*12*Landed)
    holoAng(Bones["Spine1",number],slerp(quat(Base:toWorld(ang(Spine1Ang:pitch()+25*DOWN+Dir4:pitch()*0.2*(1-ShiftVal)*!Flying,Dir4:yaw()+Spine1Ang:yaw(),Spine1Ang:roll())*ang(On_Ground2,1,On_Ground2))),quat(holoEntity(Bones["Pelvis",number]):angles()),0.6+0.2*ShiftVal):toAngle())
    holoAng(Bones["Spine2",number],slerp(quat(Base:toWorld(ang(Spine2Ang:pitch()+35*DOWN+Dir4:pitch()*0.4*(1-ShiftVal)*!Flying,Dir4:yaw()+Spine2Ang:yaw(),Spine2Ang:roll()):rotateAroundAxis(holoEntity(Bones["Spine1",number]):up(),(10+(55*ShiftVal))*Sin*(Step-!Step)*!Flying)*ang(On_Ground2,1,On_Ground2))),quat(holoEntity(Bones["Pelvis",number]):angles()),0.3+0.4*ShiftVal):toAngle())
    holoAng(Bones["Head",number],slerp(quat(Base:toWorld(ang(HeadAng:pitch()+LocalEyes:pitch()*0.5,Dir4:yaw()+HeadAng:yaw(),HeadAng:roll()))),quat(holoEntity(Bones["Pelvis",number]):angles()),0.4*ShiftVal):toAngle())
    if(WalkRate>=1){
        WalkRate=0
        Step=!Step
        if(MoveVal>0.1){
            if(ShiftVal>0.5){
                soundPlay("Step_"+Step,0,"physics/concrete/boulder_impact_hard3.wav")
            }else{
                soundPlay("Step_"+Step,0,"physics/body/body_medium_impact_soft3.wav")
            }
            soundPitch("Step_"+Step,50+30*clamp(Vel:length(),0,1))
        }
    }
    
    holoAng(Bones["Spine3",number],slerp(quat(holoEntity(Bones["Right_Wing_Joint_2",number]):angles()),quat(holoEntity(Bones["Left_Wing_Joint_2",number]):angles()),0.5):toAngle())
    
    arm_ik(0,-RollArmLeft,M1 ? Driver:aimPos() : LeftArmTarget,table(ang(),0))
    arm_ik(1,RollArmRight,M2 ? Driver:aimPos() : RightArmTarget,table(ang(),0))
    if(!Flying){
        holoPos(Bones["Root",number],mix(LeftLeg,RightLeg,0.5))
    }else{
        holoPos(Bones["Root",number],Base:pos())
    }
    if(Flying){
        leg_ik(0,5,LeftLegFly,0)
        leg_ik(1,-5,RightLegFly,0)
    }else{
        leg_ik(0,5,LeftLeg+vec(0,0,(25+(5*ShiftVal))*sin(WalkRate*180)*Step)*clamp(Vel:length(),0,1)*!Flying,sin(WalkRate*180)*Step*!Flying)
        leg_ik(1,-5,RightLeg+vec(0,0,(25+(5*ShiftVal))*sin(WalkRate*180)*!Step)*clamp(Vel:length(),0,1)*!Flying,sin(WalkRate*180)*!Step*!Flying)
        
    }
    VelL = Base:velL()
    MixFans += (Flying*ShiftVal*2-1)*0.2
    MixFans = clamp(MixFans,0,1)
    FlyingStart += (FlyingStart2*2-1)*0.2
    FlyingStart = clamp(FlyingStart,0,1)
    
    AnimationAngles["Left_Wing_Joint_1_Angles",angle] = holoEntity(Bones["Spine2",number]):toWorld(ang(-25*sin(clamp(FlyingStartVal*2,0,1)*90+clamp(-2+FlyingStartVal*3,0,1)*90),(-25*sin(Base:velL():x()/125*25)*(1-MoveVal)*clamp(Base:vel():length()/53,0,1)*Flying-55*abs((MOVED*0.5-MOVEA)*(1-MOVEW))+15*MOVEX)*(1-ShiftVal)*Flying+(25+15*DOWN)*(1-MixFans*0.7),-6*Flying*sin((curtime()+0.2)*180*0.5)/(1+MoveVal)*(1-ShiftVal)-25*Base:vel():z()/53/25*(1-ShiftVal)*Flying+45+25*sin(DOWN*180)+15*sin(clamp(FlyingStartVal*2,0,1)*90*(0.5+0.5*FlyingStart2)+clamp(-2+FlyingStartVal*3,0,1)*90*(0.5+0.5*FlyingStart2))*clamp(FlyingStartVal*3,0,1)*(1+0.5*sin(clamp(FlyingStartVal*2,0,1)*90)*FlyingStart2)))
    AnimationAngles["Right_Wing_Joint_1_Angles",angle] = holoEntity(Bones["Spine2",number]):toWorld(ang(-25*sin(clamp(FlyingStartVal*2,0,1)*90+clamp(-2+FlyingStartVal*3,0,1)*90),(25*sin(Base:velL():x()/125*25)*(1-MoveVal)*clamp(Base:vel():length()/53,0,1)*Flying+55*abs((MOVED-MOVEA*0.5)*(1-MOVEW))-15*MOVEX)*(1-ShiftVal)*Flying+(-25-15*DOWN)*(1-MixFans*0.7),-4*Flying*sin((curtime()-0.2)*180*0.5)/(1+MoveVal)*(1-ShiftVal)+25*Base:vel():z()/53/25*(1-ShiftVal)*Flying-45-25*sin(DOWN*180)-15*sin(clamp(FlyingStartVal*2,0,1)*90*(0.5+0.5*FlyingStart2)+clamp(-2+FlyingStartVal*3,0,1)*90*(0.5+0.5*FlyingStart2))*clamp(FlyingStartVal*3,0,1)*(1+0.5*sin(clamp(FlyingStartVal*2,0,1)*90)*FlyingStart2)))
    
    local Ang = AnimationAngles["Left_Wing_Joint_1_Angles",angle]
    holoAng(Bones["Left_Wing_Joint_1",number],vectorJiggle2World(1, Ang:forward(), 0.4, 0.25, Ang:up()))
    
    local Ang = AnimationAngles["Right_Wing_Joint_1_Angles",angle]
    holoAng(Bones["Right_Wing_Joint_1",number],vectorJiggle2World(2, Ang:forward(), 0.4, 0.25, Ang:up()))
    
    AnimationAngles["Left_Wing_Joint_2_Angles",angle] = holoEntity(Bones["Left_Wing_Joint_1",number]):toWorld(ang(10-45*sin(clamp(FlyingStartVal*2,0,1)*90+clamp(-2+FlyingStartVal*3,0,1)*90)*(0.2+0.8*FlyingStart2),(-55-125*DOWN)*(1-MixFans*0.7)+45*sin(clamp(FlyingStartVal*2,0,1)*90+clamp(-2+FlyingStartVal*3,0,1)*90)*(0.2+0.8*FlyingStart2),25*sin(clamp(FlyingStartVal*2,0,1)*90+clamp(-2+FlyingStartVal*3,0,1)*90)-25*sin(DOWN*180)-45*(1-MixFans*0.7)-45*clamp(lerp(Base:vel():z()/5,abs(Base:vel():z())/5,MixFans)/53/5,-2,2)))
    AnimationAngles["Right_Wing_Joint_2_Angles",angle] = holoEntity(Bones["Right_Wing_Joint_1",number]):toWorld(ang(10-45*sin(clamp(FlyingStartVal*2,0,1)*90+clamp(-2+FlyingStartVal*3,0,1)*90)*(0.2+0.8*FlyingStart2),(55+125*DOWN)*(1-MixFans*0.7)-45*sin(clamp(FlyingStartVal*2,0,1)*90+clamp(-2+FlyingStartVal*3,0,1)*90)*(0.2+0.8*FlyingStart2),-25*sin(clamp(FlyingStartVal*2,0,1)*90+clamp(-2+FlyingStartVal*3,0,1)*90)+25*sin(DOWN*180)+45*(1-MixFans*0.7)+45*clamp(lerp(Base:vel():z()/5,abs(Base:vel():z())/5,MixFans)/53/5,-2,2)))
    
    local Ang = AnimationAngles["Left_Wing_Joint_2_Angles",angle]
    holoAng(Bones["Left_Wing_Joint_2",number],vectorJiggle2World(3, Ang:forward(), 0.4, 0.25, Ang:up()))
    
    local Ang = AnimationAngles["Right_Wing_Joint_2_Angles",angle]
    holoAng(Bones["Right_Wing_Joint_2",number],vectorJiggle2World(4, Ang:forward(), 0.4, 0.25, Ang:up()))
    
    AnimationAngles["Left_Wing_Joint_3_Angles",angle] = holoEntity(Bones["Left_Wing_Joint_2",number]):toWorld(ang(10-45*DOWN,-25+5*DOWN,-25*DOWN))
    AnimationAngles["Right_Wing_Joint_3_Angles",angle] = holoEntity(Bones["Right_Wing_Joint_2",number]):toWorld(ang(10-45*DOWN,25-5*DOWN,25*DOWN))
    
    local Ang = AnimationAngles["Left_Wing_Joint_3_Angles",angle]
    holoAng(Bones["Left_Wing_Joint_3",number],vectorJiggle2World(5, Ang:forward(), 0.4, 0.25, Ang:up()))
    
    local Ang = AnimationAngles["Right_Wing_Joint_3_Angles",angle]
    holoAng(Bones["Right_Wing_Joint_3",number],vectorJiggle2World(6, Ang:forward(), 0.4, 0.25, Ang:up()))
    
    
    for(I=1,5){
        holoAng(Bones["Left_Feather_"+I,number],vectorJiggle2World(6+I, holoEntity(Bones["Left_Wing_Joint_3",number]):forward(), 0.4, 0.25, holoEntity(Bones["Left_Wing_Joint_3",number]):toWorld(ang(0,0,-(45-45*DOWN+25*clamp(-Base:velL():z()*Flying*0.1,0,1))*(I-1)/5)):up()))
    }
    
    for(I=1,5){
        holoAng(Bones["Right_Feather_"+I,number],vectorJiggle2World(11+I, holoEntity(Bones["Right_Wing_Joint_3",number]):forward(), 0.4, 0.25, holoEntity(Bones["Right_Wing_Joint_3",number]):toWorld(ang(0,0,(45-45*DOWN+25*clamp(-Base:velL():z()*Flying*0.1,0,1))*(I-1)/5)):up()))
    }
    
    MixFans2 = max(MixFans,DOWN*!Flying)
    wing_arm_ik(0, mix(holoEntity(Bones["Left_Arm_Joint_Helper2",number]):toWorld(vec(-25+65*DOWN,-5-40*DOWN,-25+15*DOWN)),holoEntity(Bones["Spine3",number]):toWorld(vec(-45,30,-10+15*Base:vel():z()/53/25)),MixFans2)+vec(0,0,45*sin(DOWN*180)),0,25-15*MixFans2,MixFans2,ang(-45,25,25+35*Base:vel():z()/53/25),DOWN)
    wing_arm_ik(1, mix(holoEntity(Bones["Right_Arm_Joint_Helper2",number]):toWorld(vec(-25+65*DOWN,5+40*DOWN,-25+15*DOWN)),holoEntity(Bones["Spine3",number]):toWorld(vec(-45,-30,-10+15*Base:vel():z()/53/25)),MixFans2)+vec(0,0,45*sin(DOWN*180)),0,-25+15*MixFans2,MixFans2,ang(-45,-25,-25-35*Base:vel():z()/53/25),DOWN)
    
    holoAng(Bones["Left_Arm_Joint_4",number],holoEntity(Bones["Left_Arm_Joint_3",number]):toWorld(ang(-holoEntity(Bones["Left_Arm_Joint_3",number]):angles():pitch()/(1+Base:vel():length()*0.01)-90,0,0)))
    holoAng(Bones["Right_Arm_Joint_4",number],holoEntity(Bones["Right_Arm_Joint_3",number]):toWorld(ang(-holoEntity(Bones["Left_Arm_Joint_3",number]):angles():pitch()/(1+Base:vel():length()*0.01)-90,0,0)))
    
    RotorRPM += 25*FlyingStart
    holoAng(Bones["Left_Arm_Joint_5",number],holoEntity(Bones["Left_Arm_Joint_4",number]):toWorld(ang(0,0,RotorRPM)))
    holoAng(Bones["Right_Arm_Joint_5",number],holoEntity(Bones["Right_Arm_Joint_4",number]):toWorld(ang(0,0,-RotorRPM)))
    
    if(changed(DN2)){
        Base:emitSound("npc/dog/dog_servo6.wav",100,100)
    }
    local Angle = (holoEntity(Bones["Left_Laser",number]):pos()-Driver:aimPos()):toAngle()
    holoAng(Bones["Left_Laser",number],Angle:rotateAroundAxis(Angle:right(),90))
    local Angle = (holoEntity(Bones["Right_Laser",number]):pos()-Driver:aimPos()):toAngle()
    holoAng(Bones["Right_Laser",number],Angle:rotateAroundAxis(Angle:right(),90))
    
    local DistMath = holoEntity(Bones["Left_Laser",number]):pos():distance(Driver:aimPos())
    holoScale(Bones["Left_Laser",number],vec(0.1,0.1,DistMath/45)*M1)
    local DistMath = holoEntity(Bones["Right_Laser",number]):pos():distance(Driver:aimPos())
    holoScale(Bones["Right_Laser",number],vec(0.1,0.1,DistMath/45)*M2)
    TP=PodControllerW["ThirdPerson",number]
    if(TP){
        holoPos(Bones["CamParent",number],Base:vel()*0.075*Flying+holoEntity(Bones["Root",number]):toWorld(vec(-175,0+1.3*Sin*(Step-!Step)*(1+0.7*ShiftVal),80+1.5*(0.5-Sin)*(1+0.6*ShiftVal)):rotate(LocalEyes)))
    }else{
        holoPos(Bones["CamParent",number],holoEntity(Bones["Head",number]):toWorld(vec(15,0,0))-vec(0,0,32))
    }
    Seat:setAng(ang())
    Seat:setAlpha(75*!Seat:driver():isValid())
    
}
event removed(_){
    DriverStore:setMaterial("")
}
if(duped()){
    foreach(I:number,E:entity=BoneParents){
        E:deparent()
    }
}
if(clk("CanFire")){
    CanFire=1
}
if(changed(players():count())){
    rangerFilter(players())
    rangerPersist(1)
}
